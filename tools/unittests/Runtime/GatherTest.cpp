#include <cmath>
#include <cstdlib>
#include <ctime>
#include <skypat/skypat.h>
#include <vector>

#define restrict
extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}
SKYPAT_F(Operator_Gather, test_gather_0) {
  const float input_0[5][4][3][2] = {
      {{{-0.011619607917964458, -0.2021142989397049},
        {-1.471903920173645, -0.2561016380786896},
        {2.0867252349853516, 1.1842682361602783}},
       {{1.331315517425537, 0.721083402633667},
        {-0.5569713115692139, -0.5890932083129883},
        {1.3077813386917114, -0.3996582329273224}},
       {{0.16254733502864838, -1.6994502544403076},
        {0.24658316373825073, -0.2991066575050354},
        {-0.03275824710726738, -0.5812029838562012}},
       {{-1.7814809083938599, -1.4781160354614258},
        {0.11362947523593903, -0.425985723733902},
        {-0.3836858868598938, 0.11869704723358154}}},
      {{{-0.4043332636356354, -1.372164011001587},
        {-0.23955859243869781, 0.5577428340911865},
        {1.1801929473876953, -0.6597800850868225}},
       {{0.18551324307918549, 1.0721532106399536},
        {0.10653974115848541, -1.4341100454330444},
        {-0.06050477921962738, 0.09745153039693832}},
       {{0.8192610740661621, 0.8526289463043213},
        {-1.5329868793487549, -0.8717315793037415},
        {-0.4164442718029022, -0.3812231421470642}},
       {{-2.1719589233398438, -1.0568281412124634},
        {0.7040783166885376, -0.04435189068317413},
        {0.8443723320960999, -0.849759042263031}}},
      {{{-0.7766429781913757, -1.1741715669631958},
        {1.0834715366363525, 0.8850197196006775},
        {-0.40533536672592163, -0.22131066024303436}},
       {{-0.4182901084423065, -0.6743361949920654},
        {-1.9225703477859497, -0.950202226638794},
        {0.8523609042167664, -0.08318036794662476}},
       {{-0.6949079632759094, -0.9852091670036316},
        {0.07467196881771088, 1.3599622249603271},
        {-0.17481708526611328, -0.6722210049629211}},
       {{0.922469437122345, 0.6988934874534607},
        {-0.2108135223388672, 0.7016468644142151},
        {-0.5692188739776611, 0.6804075241088867}}},
      {{{0.10269951075315475, -0.30891886353492737},
        {-0.3335442841053009, 0.8960272669792175},
        {-0.09280633181333542, 0.6931658387184143}},
       {{1.3151004314422607, 0.45263049006462097},
        {0.6230136156082153, 0.8798165321350098},
        {-1.7811263799667358, 0.14050397276878357}},
       {{-1.818256139755249, -0.27808934450149536},
        {0.7534611821174622, -0.7996690273284912},
        {0.17151619493961334, 0.9008594751358032}},
       {{-0.6447729468345642, -0.2413865178823471},
        {-0.1683986783027649, 0.8976002335548401},
        {-0.941696047782898, 1.103807806968689}}},
      {{{1.1192008256912231, 0.46355628967285156},
        {1.0125961303710938, -0.1101805791258812},
        {-2.063314437866211, -0.13055597245693207}},
       {{1.396285891532898, -1.4327967166900635},
        {-0.2745523154735565, -0.48428598046302795},
        {1.8222614526748657, 0.5038000345230103}},
       {{-0.9533874988555908, -0.425709992647171},
        {-0.9550187587738037, 0.9239515662193298},
        {-1.4964834451675415, 0.04825999215245247}},
       {{0.1695629209280014, 0.505847156047821},
        {-1.6987172365188599, -0.0091201551258564},
        {0.7959781885147095, -1.4310667514801025}}}};
  const int32_t input_0_ndim = 4;
  const int32_t input_0_dims[] = {5, 4, 3, 2};
  const float input_1[3] = {0, 1, 3};
  const int32_t input_1_ndim = 1;
  const int32_t input_1_dims[] = {3};
  float output_0[3][4][3][2];
  const int32_t output_0_ndim = 4;
  const int32_t output_0_dims[] = {3, 4, 3, 2};
  const float answer_0[3][4][3][2] = {
      {{{-0.011619607917964458, -0.2021142989397049},
        {-1.471903920173645, -0.2561016380786896},
        {2.0867252349853516, 1.1842682361602783}},
       {{1.331315517425537, 0.721083402633667},
        {-0.5569713115692139, -0.5890932083129883},
        {1.3077813386917114, -0.3996582329273224}},
       {{0.16254733502864838, -1.6994502544403076},
        {0.24658316373825073, -0.2991066575050354},
        {-0.03275824710726738, -0.5812029838562012}},
       {{-1.7814809083938599, -1.4781160354614258},
        {0.11362947523593903, -0.425985723733902},
        {-0.3836858868598938, 0.11869704723358154}}},
      {{{-0.4043332636356354, -1.372164011001587},
        {-0.23955859243869781, 0.5577428340911865},
        {1.1801929473876953, -0.6597800850868225}},
       {{0.18551324307918549, 1.0721532106399536},
        {0.10653974115848541, -1.4341100454330444},
        {-0.06050477921962738, 0.09745153039693832}},
       {{0.8192610740661621, 0.8526289463043213},
        {-1.5329868793487549, -0.8717315793037415},
        {-0.4164442718029022, -0.3812231421470642}},
       {{-2.1719589233398438, -1.0568281412124634},
        {0.7040783166885376, -0.04435189068317413},
        {0.8443723320960999, -0.849759042263031}}},
      {{{0.10269951075315475, -0.30891886353492737},
        {-0.3335442841053009, 0.8960272669792175},
        {-0.09280633181333542, 0.6931658387184143}},
       {{1.3151004314422607, 0.45263049006462097},
        {0.6230136156082153, 0.8798165321350098},
        {-1.7811263799667358, 0.14050397276878357}},
       {{-1.818256139755249, -0.27808934450149536},
        {0.7534611821174622, -0.7996690273284912},
        {0.17151619493961334, 0.9008594751358032}},
       {{-0.6447729468345642, -0.2413865178823471},
        {-0.1683986783027649, 0.8976002335548401},
        {-0.941696047782898, 1.103807806968689}}}};
  const int32_t axis = 0;
  ONNC_RUNTIME_gather_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                            (float *)input_1, input_1_ndim, input_1_dims,
                            (float *)output_0, output_0_ndim, output_0_dims,
                            axis);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3 * 4 * 3 * 2; ++i) {
    if (std::abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}

SKYPAT_F(Operator_Gather, test_gather_1) {
  const float input_0[5][4][3][2] = {
      {{{-0.8275923728942871, 0.5702390074729919},
        {-1.0332350730895996, 2.163114309310913},
        {2.1982827186584473, -0.6485114693641663}},
       {{-0.9864822626113892, -1.0537997484207153},
        {0.11912048608064651, 0.920091450214386},
        {-0.532692015171051, 1.1736698150634766}},
       {{-1.6499210596084595, -1.3132604360580444},
        {-0.2791544497013092, -0.7472796440124512},
        {-0.22178654372692108, -0.5742364525794983}},
       {{-1.3380274772644043, 0.04595983028411865},
        {1.733237385749817, -0.639307975769043},
        {-1.6888461112976074, 1.396716594696045}}},
      {{{-0.42207446694374084, 0.2344958484172821},
        {0.8820000290870667, 0.30806055665016174},
        {0.6805561780929565, -0.7828800082206726}},
       {{0.06032377481460571, 0.3716752529144287},
        {1.5116490125656128, -1.479565143585205},
        {0.9847738742828369, 0.5670183300971985}},
       {{0.05930178984999657, -0.31239616870880127},
        {-0.43396568298339844, -0.08339421451091766},
        {1.066968321800232, -1.1898761987686157}},
       {{-0.5046011805534363, -0.04037768766283989},
        {-1.255102515220642, -2.2203710079193115},
        {-0.2853882312774658, 0.003865910228341818}}},
      {{{-1.247042179107666, -0.20502008497714996},
        {-0.4202888607978821, 0.8925936818122864},
        {-1.2271994352340698, -0.9660553336143494}},
       {{-0.4653884470462799, -0.016377218067646027},
        {1.8094546794891357, -0.8254482746124268},
        {-1.7369331121444702, -1.3276230096817017}},
       {{-0.7537328600883484, -0.54331374168396},
        {1.0947966575622559, -0.8458309173583984},
        {0.6628215909004211, -0.23499248921871185}},
       {{0.4611484706401825, -1.4437694549560547},
        {-0.2642754018306732, 0.1073596179485321},
        {-0.9416699409484863, 0.6549004912376404}}},
      {{{1.945365309715271, 1.6921584606170654},
        {0.8057533502578735, -1.8220813274383545},
        {-2.0542714595794678, 0.996203601360321}},
       {{-0.2219742238521576, 1.1539828777313232},
        {1.4462618827819824, -0.2812446057796478},
        {-2.4110569953918457, 0.06690055876970291}},
       {{-0.863279402256012, -0.5407519936561584},
        {1.392569661140442, 0.9249711632728577},
        {1.5691497325897217, 0.35400331020355225}},
       {{-0.22797517478466034, -1.3174437284469604},
        {0.5021815896034241, -0.3142390549182892},
        {-0.2622527480125427, -0.022048220038414}}},
      {{{-0.37719249725341797, -0.5338982939720154},
        {-0.05763990804553032, 0.5642654895782471},
        {-0.2703752815723419, 1.9409831762313843}},
       {{-0.12284858524799347, 1.2237035036087036},
        {0.8397092819213867, -0.5368078947067261},
        {0.5204373598098755, -0.04052252694964409}},
       {{0.28696343302726746, -0.5068116784095764},
        {-0.4650023281574249, 0.23259028792381287},
        {-0.11623594164848328, -1.3096339702606201}},
       {{-1.180424690246582, -0.6652539968490601},
        {-1.0095423460006714, -0.9956197142601013},
        {0.8518701195716858, 1.4719741344451904}}}};
  const int32_t input_0_ndim = 4;
  const int32_t input_0_dims[] = {5, 4, 3, 2};
  const float input_1[3] = {0, 1, 3};
  const int32_t input_1_ndim = 1;
  const int32_t input_1_dims[] = {3};
  float output_0[5][3][3][2];
  const int32_t output_0_ndim = 4;
  const int32_t output_0_dims[] = {5, 3, 3, 2};
  const float answer_0[5][3][3][2] = {
      {{{-0.8275923728942871, 0.5702390074729919},
        {-1.0332350730895996, 2.163114309310913},
        {2.1982827186584473, -0.6485114693641663}},
       {{-0.9864822626113892, -1.0537997484207153},
        {0.11912048608064651, 0.920091450214386},
        {-0.532692015171051, 1.1736698150634766}},
       {{-1.3380274772644043, 0.04595983028411865},
        {1.733237385749817, -0.639307975769043},
        {-1.6888461112976074, 1.396716594696045}}},
      {{{-0.42207446694374084, 0.2344958484172821},
        {0.8820000290870667, 0.30806055665016174},
        {0.6805561780929565, -0.7828800082206726}},
       {{0.06032377481460571, 0.3716752529144287},
        {1.5116490125656128, -1.479565143585205},
        {0.9847738742828369, 0.5670183300971985}},
       {{-0.5046011805534363, -0.04037768766283989},
        {-1.255102515220642, -2.2203710079193115},
        {-0.2853882312774658, 0.003865910228341818}}},
      {{{-1.247042179107666, -0.20502008497714996},
        {-0.4202888607978821, 0.8925936818122864},
        {-1.2271994352340698, -0.9660553336143494}},
       {{-0.4653884470462799, -0.016377218067646027},
        {1.8094546794891357, -0.8254482746124268},
        {-1.7369331121444702, -1.3276230096817017}},
       {{0.4611484706401825, -1.4437694549560547},
        {-0.2642754018306732, 0.1073596179485321},
        {-0.9416699409484863, 0.6549004912376404}}},
      {{{1.945365309715271, 1.6921584606170654},
        {0.8057533502578735, -1.8220813274383545},
        {-2.0542714595794678, 0.996203601360321}},
       {{-0.2219742238521576, 1.1539828777313232},
        {1.4462618827819824, -0.2812446057796478},
        {-2.4110569953918457, 0.06690055876970291}},
       {{-0.22797517478466034, -1.3174437284469604},
        {0.5021815896034241, -0.3142390549182892},
        {-0.2622527480125427, -0.022048220038414}}},
      {{{-0.37719249725341797, -0.5338982939720154},
        {-0.05763990804553032, 0.5642654895782471},
        {-0.2703752815723419, 1.9409831762313843}},
       {{-0.12284858524799347, 1.2237035036087036},
        {0.8397092819213867, -0.5368078947067261},
        {0.5204373598098755, -0.04052252694964409}},
       {{-1.180424690246582, -0.6652539968490601},
        {-1.0095423460006714, -0.9956197142601013},
        {0.8518701195716858, 1.4719741344451904}}}};
  const int32_t axis = 1;
  ONNC_RUNTIME_gather_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                            (float *)input_1, input_1_ndim, input_1_dims,
                            (float *)output_0, output_0_ndim, output_0_dims,
                            axis);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 5 * 3 * 3 * 2; ++i) {
    if (std::abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}
