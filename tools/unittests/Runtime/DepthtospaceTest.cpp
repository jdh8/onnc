#include "dragonite.hpp"
SKYPAT_F(Operator_DepthToSpace, test_depthtospace) {
  const float input_0[] = {
      0.66374886,  0.06732838,  0.29194337, 0.88489497,  0.5332097,
      0.7253435,   0.15196598,  0.24465695, 0.6957307,   0.5361652,
      0.48267782,  0.4643142,   0.17665368, 0.8297587,   0.41482228,
      0.578308,    0.9408958,   0.04657237, 0.90691775,  0.24784228,
      0.5601241,   0.20437619,  0.71405154, 0.17937876,  0.026944984,
      0.7012086,   0.5813857,   0.95618606, 0.46911055,  0.1662215,
      0.40858933,  0.39598098,  0.5554766,  0.062071774, 0.52439183,
      0.7477477,   0.28976697,  0.6825973,  0.15554011,  0.60229886,
      0.380581,    0.03546761,  0.6993803,  0.7184489,   0.23015293,
      0.60816187,  0.3301793,   0.64813274, 0.8552735,   0.21572824,
      0.72919464,  0.070348114, 0.8448199,  0.78185874,  0.089893125,
      0.6703123,   0.14009471,  0.69533885, 0.71047014,  0.618984,
      0.17821488,  0.09180834,  0.4810081,  0.23770604,  0.92535293,
      0.97618675,  0.34881696,  0.49012583, 0.4099351,   0.727257,
      0.09973015,  0.250812,    0.60519016, 0.8021704,   0.9896078,
      0.79495406,  0.7184176,   0.7906613,  0.64306855,  0.5823541,
      0.76857674,  0.83561563,  0.7547873,  0.89338404,  0.47139558,
      0.49339855,  0.8529163,   0.94007385, 0.56167364,  0.9113791,
      0.104651354, 0.58688307,  0.42567936, 0.2538986,   0.8766341,
      0.2334644,   0.72586435,  0.83287346, 0.64830303,  0.43049738,
      0.41193822,  0.6503991,   0.08184203, 0.66047585,  0.048948545,
      0.37610447,  0.03470275,  0.17929497, 0.3571104,   0.1569607,
      0.833888,    0.858867,    0.7981643,  0.48541173,  0.6539779,
      0.2857559,   0.81896883,  0.29616794, 0.6634944,   0.9783008,
      0.96876633,  0.8065776,   0.20395052, 0.18905827,  0.7266911,
      0.29752618,  0.019540628, 0.3814205,  0.009440926, 0.31977445,
      0.060620587, 0.52154595,  0.33086267, 0.6321114,   0.34806833,
      0.04796963,  0.7044114,   0.30784184, 0.15847151,  0.8141962,
      0.7252788,   0.5108695,   0.3047316,  0.5247386};
  const int32_t input_0_ndim = 4;
  const int32_t input_0_dims[] = {2, 8, 3, 3};
  float output_0[144];
  const int32_t output_0_ndim = 4;
  const int32_t output_0_dims[] = {2, 2, 6, 6};
  const float answer_0[] = {
      0.66374886,  0.90691775,  0.06732838,  0.24784228,  0.29194337,
      0.5601241,   0.28976697,  0.089893125, 0.6825973,   0.6703123,
      0.15554011,  0.14009471,  0.88489497,  0.20437619,  0.5332097,
      0.71405154,  0.7253435,   0.17937876,  0.60229886,  0.69533885,
      0.380581,    0.71047014,  0.03546761,  0.618984,    0.15196598,
      0.026944984, 0.24465695,  0.7012086,   0.6957307,   0.5813857,
      0.6993803,   0.17821488,  0.7184489,   0.09180834,  0.23015293,
      0.4810081,   0.5361652,   0.95618606,  0.48267782,  0.46911055,
      0.4643142,   0.1662215,   0.60816187,  0.23770604,  0.3301793,
      0.92535293,  0.64813274,  0.97618675,  0.17665368,  0.40858933,
      0.8297587,   0.39598098,  0.41482228,  0.5554766,   0.8552735,
      0.34881696,  0.21572824,  0.49012583,  0.72919464,  0.4099351,
      0.578308,    0.062071774, 0.9408958,   0.52439183,  0.04657237,
      0.7477477,   0.070348114, 0.727257,    0.8448199,   0.09973015,
      0.78185874,  0.250812,    0.60519016,  0.104651354, 0.8021704,
      0.58688307,  0.9896078,   0.42567936,  0.3571104,   0.019540628,
      0.1569607,   0.3814205,   0.833888,    0.009440926, 0.79495406,
      0.2538986,   0.7184176,   0.8766341,   0.7906613,   0.2334644,
      0.858867,    0.31977445,  0.7981643,   0.060620587, 0.48541173,
      0.52154595,  0.64306855,  0.72586435,  0.5823541,   0.83287346,
      0.76857674,  0.64830303,  0.6539779,   0.33086267,  0.2857559,
      0.6321114,   0.81896883,  0.34806833,  0.83561563,  0.43049738,
      0.7547873,   0.41193822,  0.89338404,  0.6503991,   0.29616794,
      0.04796963,  0.6634944,   0.7044114,   0.9783008,   0.30784184,
      0.47139558,  0.08184203,  0.49339855,  0.66047585,  0.8529163,
      0.048948545, 0.96876633,  0.15847151,  0.8065776,   0.8141962,
      0.20395052,  0.7252788,   0.94007385,  0.37610447,  0.56167364,
      0.03470275,  0.9113791,   0.17929497,  0.18905827,  0.5108695,
      0.7266911,   0.3047316,   0.29752618,  0.5247386};
  const int32_t blocksize = 2;
  ONNC_RUNTIME_depthtospace_float(NULL, (float *)input_0, input_0_ndim,
                                  input_0_dims, (float *)output_0,
                                  output_0_ndim, output_0_dims, blocksize);
  (dragonite::verify)(reinterpret_cast<float *>(output_0),
                      reinterpret_cast<const float *>(answer_0), 144);
}

SKYPAT_F(Operator_DepthToSpace, test_depthtospace_example) {
  const float input_0[] = {0.0,  1.0,  2.0,  3.0,  4.0,  5.0,  6.0,  7.0,
                           8.0,  9.0,  10.0, 11.0, 12.0, 13.0, 14.0, 15.0,
                           16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0};
  const int32_t input_0_ndim = 4;
  const int32_t input_0_dims[] = {1, 4, 2, 3};
  float output_0[24];
  const int32_t output_0_ndim = 4;
  const int32_t output_0_dims[] = {1, 1, 4, 6};
  const float answer_0[] = {0.0,  6.0,  1.0,  7.0,  2.0,  8.0,  12.0, 18.0,
                            13.0, 19.0, 14.0, 20.0, 3.0,  9.0,  4.0,  10.0,
                            5.0,  11.0, 15.0, 21.0, 16.0, 22.0, 17.0, 23.0};
  const int32_t blocksize = 2;
  ONNC_RUNTIME_depthtospace_float(NULL, (float *)input_0, input_0_ndim,
                                  input_0_dims, (float *)output_0,
                                  output_0_ndim, output_0_dims, blocksize);
  (dragonite::verify)(reinterpret_cast<float *>(output_0),
                      reinterpret_cast<const float *>(answer_0), 24);
}
