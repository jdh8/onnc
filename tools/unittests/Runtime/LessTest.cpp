#if defined(__GNUC__) || defined(_MSC_VER)
#  define restrict __restrict
#else
#  define restrict
#endif

extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}

#undef restrict

#include "norm.hpp"
#include <skypat/skypat.h>
SKYPAT_F(Operator_Less, test_less)
{
  const float input_0[] = {-0.9477532,   -0.15279227, -0.8615183,   0.20735648,   -0.2799925,  -0.03580906, -0.09943655,
                           -0.48803335,  0.8553109,   -1.1219146,   -0.16703433,  -0.7071401,  0.023762437, -0.6832071,
                           -1.1962155,   1.5157912,   -0.44149,     0.35891098,   -0.5175035,  -0.82281405, -1.0284181,
                           -1.591318,    -0.19056183, -0.5515427,   0.99135554,   -0.3072258,  1.3767653,   -0.7726484,
                           -0.74589425,  0.4699965,   -0.098787546, 1.5755986,    0.12904254,  1.9683447,   3.1394112,
                           -0.61197436,  -0.40355283, -0.6538008,   -0.072408326, 1.7168763,   -1.684719,   0.8094412,
                           -0.81107175,  0.19413573,  1.0615746,    -0.6440187,   -0.12071958, 3.255088,    -0.7352242,
                           -0.038572486, -0.10288628, 0.09742623,   -0.8169254,   -0.7436894,  -0.5857247,  -0.56929046,
                           -2.654841,    0.19168009,  1.3307309,    0.5286718};
  const int32_t input_0_ndim   = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float   input_1[] = {-1.1073223,  1.182923,   -0.1415934,    0.7606916,   0.011181618, 1.6543189,   1.9287366,
                           0.015899532, -1.180458,  -0.7729861,    -1.6579516,  0.9596432,   -0.30100536, 0.27941397,
                           0.062915824, 0.46984765, -1.1722704,    0.1492166,   0.9576567,   -0.56181073, -0.44402033,
                           0.6994477,   0.09604102, -0.0074730595, 0.62916446,  -1.0858338,  0.40145788,  -0.12012055,
                           0.87488496,  0.7733289,  -0.44362178,   0.7509821,   0.93186414,  0.6751639,   1.3095978,
                           -0.29073182, 1.3550671,  -0.26100275,   1.4921316,   0.57327944,  -0.04171325, 0.5782763,
                           -0.5335986,  0.5098315,  1.6774141,     -0.44617912, -0.3548339,  0.44349372,  -1.3059872,
                           -0.47090837, -1.1779649, -0.120856285,  0.26801014,  -1.015528,   0.518093,    -1.0733416,
                           -0.67891276, 1.4843229,  -1.9119705,    0.06705183};
  const int32_t input_1_ndim   = 3;
  const int32_t input_1_dims[] = {3, 4, 5};
  float         output_0[60];
  const int32_t output_0_ndim   = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float   answer_0[]      = {0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0,
                            0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0,
                            0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0,
                            1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0};
  using dragonite::norm;

  ONNC_RUNTIME_less_float(nullptr, input_0, input_0_ndim, input_0_dims, input_1, input_1_ndim, input_1_dims, output_0,
                          output_0_ndim, output_0_dims);
  ASSERT_TRUE(norm(answer_0, output_0, 60) <= 1e-5 * norm(answer_0, 60));
}

SKYPAT_F(Operator_Less, test_less_bcast)
{
  const float   input_0[]    = {0.70505345,  -1.1139311, -0.702429,   -0.440193,    -0.47029522, -2.1165426,  0.5538538,
                           0.034023598, 1.3459733,  0.12550896,  0.71688104,   -0.47231248, -1.4902436,  1.1436448,
                           0.42843157,  -1.8055971, -0.23644546, -0.014675098, 0.57479095,  0.37721896,  -0.5067673,
                           -0.30711287, 0.2402583,  2.905539,    -1.4866521,   0.14399163,  -0.3227655,  1.3812033,
                           1.3215669,   1.1365906,  0.03860801,  1.6651155,    -0.36421347, 1.5481452,   0.22987613,
                           0.8957045,   -1.4725211, -0.7088458,  -1.1499751,   0.061912358, -1.0882397,  -1.1726134,
                           1.3046498,   1.0337502,  0.19728565,  -1.2754705,   -0.7753297,  -0.4162327,  -0.060933482,
                           1.3617399,   -1.327465,  0.610696,    -0.022583524, -0.58198076, -0.44086236, 0.42699495,
                           1.3777881,   0.3678363,  0.22907636,  -0.65080327};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float   input_1[]      = {-0.34732997, -0.13072689, -1.0684284, -0.6226618, 0.23286365};
  const int32_t input_1_ndim   = 1;
  const int32_t input_1_dims[] = {5};
  float         output_0[60];
  const int32_t output_0_ndim   = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float   answer_0[]      = {0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0,
                            1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0,
                            1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0};
  using dragonite::norm;

  ONNC_RUNTIME_less_float(nullptr, input_0, input_0_ndim, input_0_dims, input_1, input_1_ndim, input_1_dims, output_0,
                          output_0_ndim, output_0_dims);
  ASSERT_TRUE(norm(answer_0, output_0, 60) <= 1e-5 * norm(answer_0, 60));
}
