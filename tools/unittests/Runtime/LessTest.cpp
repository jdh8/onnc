#include <cmath>
#include <cstdlib>
#include <ctime>
#include <skypat/skypat.h>
#include <vector>

#define restrict
extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}
SKYPAT_F(Operator_Less, test_less) {
  const float input_0[3][4][5] = {
      {{0.45509108901023865, -1.3801785707473755, 0.4923102855682373,
        -2.3796520233154297, 0.6268704533576965},
       {2.230891227722168, -0.0021596055012196302, 0.16581644117832184,
        0.6742808818817139, 0.31374627351760864},
       {-0.39012545347213745, 0.1711364984512329, -0.10250193625688553,
        0.5211349725723267, 1.7598109245300293},
       {-1.1672676801681519, -0.6658177375793457, -0.989793598651886,
        -0.2440580576658249, 2.022799253463745}},
      {{-1.1373804807662964, 0.6357641220092773, 1.2332195043563843,
        0.5671696066856384, -0.8517179489135742},
       {-1.9795888662338257, 0.38869327306747437, -0.4165760576725006,
        0.5944470763206482, -0.270235538482666},
       {-2.0296683311462402, -1.2017558813095093, -0.42209377884864807,
        -0.7462175488471985, 1.251695156097412},
       {-0.6819145679473877, 0.47364354133605957, 1.3748260736465454,
        -0.4824250042438507, 0.47938501834869385}},
      {{1.3290413618087769, -1.2730287313461304, -1.2950150966644287,
        -0.9067450761795044, -0.4210794270038605},
       {1.0840097665786743, -1.2442772388458252, 1.6885311603546143,
        1.3891619443893433, -1.6291590929031372},
       {0.4727257192134857, -0.0011972578940913081, 0.8379436135292053,
        0.2071351408958435, -1.3014777898788452},
       {0.9493147134780884, 0.5619220733642578, 1.2243058681488037,
        -0.289373517036438, 0.9665952324867249}}};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[3][4][5] = {
      {{-0.8422749042510986, 0.2906811833381653, 0.6022930145263672,
        1.758778691291809, -0.26424914598464966},
       {1.0877163410186768, 1.1379984617233276, 0.4843049943447113,
        -1.5060789585113525, 0.40320059657096863},
       {0.1972198337316513, -0.6961233615875244, 2.495927095413208,
        -0.6041537523269653, 0.23760829865932465},
       {0.4065588712692261, 0.184157595038414, -0.8322004079818726,
        -1.4840106964111328, -0.42472168803215027}},
      {{0.5515061616897583, 0.7200210690498352, 0.40369653701782227,
        0.5103806257247925, -0.5955291986465454},
       {-0.1978437453508377, 0.32199057936668396, 0.7140183448791504,
        0.192434623837471, -0.11107782274484634},
       {0.18779566884040833, 0.4699289798736572, 0.6808273792266846,
        0.8674121499061584, 0.6620564460754395},
       {-1.2916431427001953, 0.07232315093278885, -0.9656692147254944,
        -1.1483402252197266, 0.8059258460998535}},
      {{0.39010748267173767, 0.3454480469226837, -0.2487131655216217,
        -0.3757510781288147, -0.19915637373924255},
       {2.2715306282043457, -0.04134410247206688, 1.127530574798584,
        0.2589614689350128, 1.346377968788147},
       {0.25547361373901367, 0.8608174324035645, 0.2783873677253723,
        1.2250126600265503, -0.791488528251648},
       {0.5418124794960022, 0.06801170110702515, -0.38900429010391235,
        0.5046851634979248, -0.18116702139377594}}};
  const int32_t input_1_ndim = 3;
  const int32_t input_1_dims[] = {3, 4, 5};
  float output_0[3][4][5];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[3][4][5] = {{{0.0, 1.0, 1.0, 1.0, 0.0},
                                    {0.0, 1.0, 1.0, 0.0, 1.0},
                                    {1.0, 0.0, 1.0, 0.0, 0.0},
                                    {1.0, 1.0, 1.0, 0.0, 0.0}},
                                   {{1.0, 1.0, 0.0, 0.0, 1.0},
                                    {1.0, 0.0, 1.0, 0.0, 1.0},
                                    {1.0, 1.0, 1.0, 1.0, 0.0},
                                    {0.0, 0.0, 0.0, 0.0, 1.0}},
                                   {{0.0, 1.0, 1.0, 1.0, 1.0},
                                    {1.0, 1.0, 0.0, 0.0, 1.0},
                                    {0.0, 1.0, 0.0, 1.0, 1.0},
                                    {0.0, 0.0, 0.0, 1.0, 0.0}}};
  ONNC_RUNTIME_less_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                          (float *)input_1, input_1_ndim, input_1_dims,
                          (float *)output_0, output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3 * 4 * 5; ++i) {
    if (abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}

SKYPAT_F(Operator_Less, test_less_bcast) {
  const float input_0[3][4][5] = {
      {{0.4578506648540497, -0.6860023736953735, -0.15130004286766052,
        -0.06597074121236801, 1.495917558670044},
       {0.23913681507110596, -0.6558215022087097, -0.3359184265136719,
        0.7445845603942871, 0.9716882109642029},
       {-0.5350874066352844, -0.4530533254146576, -1.887589931488037,
        2.1011641025543213, -0.8341405987739563},
       {-0.0703810453414917, -2.8534340858459473, -1.0488473176956177,
        1.1581554412841797, 0.8274968862533569}},
      {{0.7072263360023499, 0.007542535196989775, 0.3495839834213257,
        -0.03632504492998123, 0.19659098982810974},
       {-0.07567624747753143, 1.1984171867370605, -0.5083531141281128,
        -0.12088838219642639, -0.7942958474159241},
       {0.316397100687027, 1.9497394561767578, -0.2505829930305481,
        -0.916054904460907, -0.06005686894059181},
       {0.2873179614543915, -2.8750522136688232, 0.5444567799568176,
        -0.7373278737068176, -1.174222707748413}},
      {{1.0656529664993286, -1.46770441532135, 0.7720280885696411,
        1.770735502243042, -2.303950548171997},
       {0.14770285785198212, 1.4306252002716064, 1.0075585842132568,
        -0.3550548255443573, 0.15397538244724274},
       {-0.8410103917121887, 1.6706055402755737, 1.8098881244659424,
        0.027890436351299286, 0.8001790046691895},
       {0.47601887583732605, -0.6416850686073303, -0.9784864783287048,
        -0.6693543791770935, -0.8858537673950195}}};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[5] = {0.4472331404685974, 0.8243146538734436,
                            -1.3662357330322266, -0.6612167358398438,
                            -0.34783247113227844};
  const int32_t input_1_ndim = 1;
  const int32_t input_1_dims[] = {5};
  float output_0[3][4][5];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[3][4][5] = {{{0.0, 1.0, 0.0, 0.0, 0.0},
                                    {1.0, 1.0, 0.0, 0.0, 0.0},
                                    {1.0, 1.0, 1.0, 0.0, 1.0},
                                    {1.0, 1.0, 0.0, 0.0, 0.0}},
                                   {{0.0, 1.0, 0.0, 0.0, 0.0},
                                    {1.0, 0.0, 0.0, 0.0, 1.0},
                                    {1.0, 0.0, 0.0, 1.0, 0.0},
                                    {1.0, 1.0, 0.0, 1.0, 1.0}},
                                   {{0.0, 1.0, 0.0, 0.0, 1.0},
                                    {1.0, 0.0, 0.0, 0.0, 0.0},
                                    {1.0, 0.0, 0.0, 0.0, 0.0},
                                    {0.0, 1.0, 0.0, 1.0, 1.0}}};
  ONNC_RUNTIME_less_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                          (float *)input_1, input_1_ndim, input_1_dims,
                          (float *)output_0, output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3 * 4 * 5; ++i) {
    if (abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}
