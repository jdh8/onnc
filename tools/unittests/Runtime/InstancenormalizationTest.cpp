#include "dragonite.hpp"
SKYPAT_F(Operator_InstanceNormalization, test_instancenorm_example) {
  const float input_0[] = {-1.0, 0.0, 1.0, 2.0, 3.0, 4.0};
  const int32_t input_0_ndim = 4;
  const int32_t input_0_dims[] = {1, 2, 1, 3};
  const float input_1[] = {1.0, 1.5};
  const int32_t input_1_ndim = 1;
  const int32_t input_1_dims[] = {2};
  const float input_2[] = {0.0, 1.0};
  const int32_t input_2_ndim = 1;
  const int32_t input_2_dims[] = {2};
  float output_0[6];
  const int32_t output_0_ndim = 4;
  const int32_t output_0_dims[] = {1, 2, 1, 3};
  const float answer_0[] = {-1.2247356, 0.0, 1.2247356,
                            -0.8371035, 1.0, 2.8371034};
  const float epsilon = 0;
  ONNC_RUNTIME_instancenormalization_float(
      NULL, (float *)input_0, input_0_ndim, input_0_dims, (float *)input_1,
      input_1_ndim, input_1_dims, (float *)input_2, input_2_ndim, input_2_dims,
      (float *)output_0, output_0_ndim, output_0_dims, epsilon);
  (dragonite::verify)(reinterpret_cast<float *>(output_0),
                      reinterpret_cast<const float *>(answer_0), 6);
}

SKYPAT_F(Operator_InstanceNormalization, test_instancenorm_epsilon) {
  const float input_0[] = {
      0.3758091,   -0.11520348, 1.5599772,   -0.13313457, -0.5731182,
      -0.78354967, 0.9948745,   0.6542276,   0.46555105,  0.081407584,
      0.93182164,  0.7344379,   0.34362283,  -1.2093189,  -2.3046062,
      0.37422225,  -1.2710879,  0.22652277,  0.24562532,  -0.03352008,
      -0.03852407, -0.13196832, 0.7828033,   -1.4887424,  0.053061344,
      -1.3646855,  0.431149,    -1.0055861,  0.6559563,   2.5515008,
      2.3665586,   -0.36006543, 1.6112014,   1.2630268,   1.3705957,
      1.7380943,   0.70867914,  0.035839394, -0.7279399,  -0.6676727,
      0.13703829,  0.6411039,   -1.7236569,  0.9578458,   -0.2462387,
      -1.3876485,  0.2835561,   -1.3011261,  0.13135737,  -0.29626265,
      0.011333217, -0.20491032, 0.61038417,  -1.2815607,  0.064449154,
      0.59081167,  2.050515,    -0.45021138, 0.8679349,   0.46922594,
      -1.3919885,  -1.1748248,  -1.1825767,  0.33646187,  1.4228569,
      1.2013687,   -3.1427,     1.5214897,   0.16102614,  0.13860653,
      0.5339937,   -0.99915296, -0.6414776,  0.86807203,  -0.050888084,
      -1.0987207,  -0.55539954, -0.45114496, -0.65074426, -0.58378315,
      0.44750148,  0.9408434,   -0.37483534, 1.2868012,   -1.6895286,
      0.38404417,  -0.3217004,  0.24807988,  0.44066325,  -0.8527092,
      -0.87348884, 2.2970607,   -0.59351754, -1.6635237,  0.021131707,
      -0.99374783, 0.24608667,  1.975751,    -0.21156843, 0.15725705,
      -2.7077544,  -0.73770106, 3.3322814,   1.2645394,   -0.26830482,
      0.6263772,   -0.1714474,  -1.8522031,  0.12757117,  -0.44100016,
      0.47839227,  -1.6809713,  -2.0183313,  -0.4083189,  0.16306396,
      -1.0974954,  0.6869841,   0.9762223,   -1.0645193,  -0.45045885};
  const int32_t input_0_ndim = 4;
  const int32_t input_0_dims[] = {2, 3, 4, 5};
  const float input_1[] = {-0.08864143, 0.23328085, 0.7429136};
  const int32_t input_1_ndim = 1;
  const int32_t input_1_dims[] = {3};
  const float input_2[] = {0.08665867, -1.2473943, 0.6098276};
  const int32_t input_2_ndim = 1;
  const int32_t input_2_dims[] = {3};
  float output_0[120];
  const int32_t output_0_ndim = 4;
  const int32_t output_0_dims[] = {2, 3, 4, 5};
  const float answer_0[] = {
      0.051707298,  0.10108158,   -0.067367956, 0.10288466,    0.14712767,
      0.16828781,   -0.010543466, 0.02371063,   0.042683203,   0.081311144,
      -0.004203126, 0.015645005,  0.05494382,   0.21110149,    0.32123923,
      0.051866863,  0.21731274,   0.066718936,  0.06479806,    0.092867814,
      -1.334363,    -1.3533645,   -1.1673495,   -1.6292589,    -1.3157394,
      -1.6040324,   -1.2388569,   -1.531011,    -1.1931432,    -0.8076921,
      -0.84529936,  -1.399747,    -0.99889815,  -1.069698,     -1.0478243,
      -0.97309494,  -1.1824223,   -1.3192414,   -1.4745528,    -1.4622977,
      0.72618115,   1.1426063,    -0.81100005,  1.4042771,     0.4095435,
      -0.5334125,   0.84722435,   -0.46193355,  0.721488,      0.36821705,
      0.6223321,    0.44368622,   1.1172277,    -0.44576985,   0.6662129,
      1.1010582,    2.306967,     0.24103498,   1.3299987,     1.0006123,
      0.17603436,   0.15846972,   0.1590967,    0.03623369,    -0.051636204,
      -0.033721775, 0.31763557,   -0.05961384,  0.0504233,     0.052236643,
      0.0202569,    0.14426102,   0.11533148,   -0.0067640543, 0.06756336,
      0.15231426,   0.108369306,  0.09993698,   0.116080984,   0.11066503,
      -1.1561043,   -1.0446181,   -1.3419372,   -0.9664381,    -1.6390334,
      -1.1704445,   -1.3299296,   -1.2011698,   -1.1576496,    -1.4499278,
      -1.4546236,   -0.7381382,   -1.3913553,   -1.6331568,    -1.252456,
      -1.4817998,   -1.2016203,   -0.8107482,   -1.3050418,    -1.2216941,
      -0.76700383,  0.34210256,   2.6334329,    1.4693296,     0.6063646,
      1.1100553,    0.6608937,    -0.285343,    0.82923603,    0.5091401,
      1.0267422,    -0.18894237,  -0.3788703,   0.5275391,     0.84921783,
      0.13954452,   1.144176,     1.3070121,    0.15810952,    0.503815};
  const float epsilon = 0.009999999776482582;
  ONNC_RUNTIME_instancenormalization_float(
      NULL, (float *)input_0, input_0_ndim, input_0_dims, (float *)input_1,
      input_1_ndim, input_1_dims, (float *)input_2, input_2_ndim, input_2_dims,
      (float *)output_0, output_0_ndim, output_0_dims, epsilon);
  (dragonite::verify)(reinterpret_cast<float *>(output_0),
                      reinterpret_cast<const float *>(answer_0), 120);
}
