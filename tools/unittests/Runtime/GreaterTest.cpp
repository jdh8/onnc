#include <cmath>
#include <cstdlib>
#include <ctime>
#include <skypat/skypat.h>
#include <vector>

#define restrict
extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}
SKYPAT_F(Operator_Greater, test_greater) {
  const float input_0[3][4][5] = {
      {{-0.2984248697757721, -1.0910389423370361, 1.0614395141601562,
        0.05776802822947502, -0.07547591626644135},
       {-0.7220497727394104, 1.2509101629257202, -2.9183480739593506,
        0.6220585703849792, -0.4703899025917053},
       {0.16503523290157318, 0.7795490622520447, 0.2123350352048874,
        0.3258919417858124, -0.40645831823349},
       {1.210808277130127, 0.5916329026222229, 1.803882360458374,
        2.3269758224487305, -0.6373835802078247}},
      {{-1.9487661123275757, 1.4433343410491943, 0.33198973536491394,
        0.2197253555059433, -1.0811011791229248},
       {0.11150570213794708, 0.03207245096564293, -0.4371505379676819,
        1.8319926261901855, -0.5479059815406799},
       {-0.9506746530532837, 1.5709928274154663, 0.405146062374115,
        0.06342475116252899, 0.10815168172121048},
       {-0.6715260744094849, -0.45493343472480774, 0.5989672541618347,
        0.38027817010879517, 0.6395223140716553}},
      {{0.03802894055843353, 0.3248191177845001, -0.4035694897174835,
        -1.5740190744400024, 0.5201407670974731},
       {-3.2426421642303467, -0.4217507541179657, -1.3057254552841187,
        -0.329903781414032, -2.250108003616333},
       {0.42117124795913696, -0.37547391653060913, 1.243829607963562,
        0.08751779794692993, 1.1105915307998657},
       {-0.4075934588909149, 2.1764349937438965, 1.5507049560546875,
        0.0809151902794838, 0.9954425692558289}}};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[3][4][5] = {
      {{-0.32167792320251465, -1.8029494285583496, -1.870642066001892,
        -0.38843265175819397, -0.9978749752044678},
       {0.2076306790113449, -0.3314145505428314, 0.0772162452340126,
        -0.5466006994247437, -1.0659784078598022},
       {0.6996725797653198, -0.3218649923801422, -0.43836453557014465,
        0.30251795053482056, -1.1506174802780151},
       {0.7109487652778625, 0.6430030465126038, -1.3360893726348877,
        0.7145084738731384, -0.16533924639225006}},
      {{-1.8273701667785645, -0.060329146683216095, 0.8114334940910339,
        -0.16763313114643097, -0.7562432885169983},
       {1.1054596900939941, 0.5404996871948242, -0.4130125343799591,
        -0.06934470683336258, 0.3559171259403229},
       {0.6712900400161743, 0.5484434962272644, 0.2130618542432785,
        1.270422339439392, 1.2520339488983154},
       {0.722980797290802, -0.7188580632209778, 0.7042785882949829,
        -0.7107393741607666, 0.09864547103643417}},
      {{1.3441543579101562, -0.1311011165380478, 1.1984089612960815,
        0.2675624191761017, 0.5915101766586304},
       {1.4928221702575684, -0.3756029009819031, -1.6857876777648926,
        0.9383918642997742, -0.07889179140329361},
       {0.830360472202301, 0.338640421628952, 1.7630518674850464,
        0.5382605791091919, 0.021988486871123314},
       {-0.059062086045742035, -0.7757170796394348, 0.41954919695854187,
        -1.6094551086425781, -0.3971152603626251}}};
  const int32_t input_1_ndim = 3;
  const int32_t input_1_dims[] = {3, 4, 5};
  float output_0[3][4][5];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[3][4][5] = {{{1.0, 1.0, 1.0, 1.0, 1.0},
                                    {0.0, 1.0, 0.0, 1.0, 1.0},
                                    {0.0, 1.0, 1.0, 1.0, 1.0},
                                    {1.0, 0.0, 1.0, 1.0, 0.0}},
                                   {{0.0, 1.0, 0.0, 1.0, 0.0},
                                    {0.0, 0.0, 0.0, 1.0, 0.0},
                                    {0.0, 1.0, 1.0, 0.0, 0.0},
                                    {0.0, 1.0, 0.0, 1.0, 1.0}},
                                   {{0.0, 1.0, 0.0, 0.0, 0.0},
                                    {0.0, 0.0, 1.0, 0.0, 0.0},
                                    {0.0, 0.0, 0.0, 0.0, 1.0},
                                    {0.0, 1.0, 1.0, 1.0, 1.0}}};
  ONNC_RUNTIME_greater_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                             (float *)input_1, input_1_ndim, input_1_dims,
                             (float *)output_0, output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3 * 4 * 5; ++i) {
    if (std::abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}

SKYPAT_F(Operator_Greater, test_greater_bcast) {
  const float input_0[3][4][5] = {
      {{-0.2254572957754135, 0.48691296577453613, 0.3012525141239166,
        -0.3151112198829651, 1.720151662826538},
       {0.26076647639274597, -0.5754156708717346, -0.22898165881633759,
        -1.0519901514053345, 0.9479650259017944},
       {-0.018639899790287018, -1.4249136447906494, 0.20292940735816956,
        -0.28028616309165955, -0.6799817085266113},
       {-0.5086517930030823, 0.6014476418495178, 0.2272031456232071,
        2.653146505355835, -0.4746885299682617}},
      {{0.7551259398460388, -0.713618814945221, 3.2528154850006104,
        -0.33698976039886475, 1.1448415517807007},
       {0.257507860660553, -0.0787581130862236, -0.2810197174549103,
        0.24590487778186798, 0.6120825409889221},
       {-0.6078559756278992, 0.1317993551492691, 0.6437422037124634,
        -0.848883867263794, -1.4434962272644043},
       {-0.06060362234711647, -1.0253535509109497, 0.12250597029924393,
        -0.4937092065811157, -0.45144444704055786}},
      {{-1.2614073753356934, 0.12643791735172272, 0.5454184412956238,
        -0.039156824350357056, 0.6590493321418762},
       {-1.102182149887085, -0.07531768828630447, 1.0308538675308228,
        0.5624904632568359, 0.6781818270683289},
       {-0.9867824912071228, 1.5164527893066406, 0.5306404232978821,
        -0.04104599729180336, -0.1662285029888153},
       {-0.25666341185569763, -1.300874948501587, 0.16626811027526855,
        -0.26472899317741394, -0.6047541499137878}}};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[5] = {-0.784430980682373, 0.7152161002159119,
                            -0.014728186652064323, -0.768396258354187,
                            2.02533221244812};
  const int32_t input_1_ndim = 1;
  const int32_t input_1_dims[] = {5};
  float output_0[3][4][5];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[3][4][5] = {{{1.0, 0.0, 1.0, 1.0, 0.0},
                                    {1.0, 0.0, 0.0, 0.0, 0.0},
                                    {1.0, 0.0, 1.0, 1.0, 0.0},
                                    {1.0, 0.0, 1.0, 1.0, 0.0}},
                                   {{1.0, 0.0, 1.0, 1.0, 0.0},
                                    {1.0, 0.0, 0.0, 1.0, 0.0},
                                    {1.0, 0.0, 1.0, 0.0, 0.0},
                                    {1.0, 0.0, 1.0, 1.0, 0.0}},
                                   {{0.0, 0.0, 1.0, 1.0, 0.0},
                                    {0.0, 0.0, 1.0, 1.0, 0.0},
                                    {0.0, 1.0, 1.0, 1.0, 0.0},
                                    {1.0, 0.0, 1.0, 1.0, 0.0}}};
  ONNC_RUNTIME_greater_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                             (float *)input_1, input_1_ndim, input_1_dims,
                             (float *)output_0, output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3 * 4 * 5; ++i) {
    if (std::abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}
