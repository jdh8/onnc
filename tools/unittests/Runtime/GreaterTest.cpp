#if defined(__GNUC__) || defined(_MSC_VER)
#  define restrict __restrict
#else
#  define restrict
#endif

extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}

#undef restrict

#include "norm.hpp"
#include <skypat/skypat.h>
SKYPAT_F(Operator_Greater, test_greater)
{
  const float input_0[] = {
    0.46603104, 0.8533835,   -2.0295928,  0.39087185,  0.50321126, -0.0767422, -0.78113633,  -1.2848264, 1.1728877,
    -1.9036638, -0.3169174,  -0.34571922, 0.745568,    -0.4313393, -1.0260593, -0.9746329,   -0.5697925, 0.21486586,
    0.1586942,  0.4764132,   0.9276201,   -0.840947,   0.8345061,  1.0517418,  -0.072849296, -0.2894636, -1.2705623,
    1.2637633,  -0.58642477, 0.5280915,   1.5010784,   0.3637505,  -0.717539,  -1.2195109,   -0.1654473, -1.1397115,
    1.2711672,  1.9391264,   0.37077892,  -0.49100018, 1.8257527,  0.64378124, -0.89492375,  0.32057127, 0.67224985,
    -1.3875822, 1.201123,    -0.57052106, 0.7447998,   -0.735078,  0.68133694, 0.023209201,  1.1747237,  0.6925222,
    1.519742,   0.7286521,   -1.4287999,  -0.20112123, -0.8769587, 0.5978009};
  const int32_t input_0_ndim   = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float   input_1[]      = {
    0.019501697, 0.1302736,   0.8277454,   -0.7019577,  0.53516287, 0.18747516,   -0.14741226, 0.5387554,  -0.067094,
    -0.5863447,  -0.77007216, -0.38456357, 0.25623366,  1.5525658,  -0.8871763,   0.044589385, -0.859064,  0.76672703,
    0.87600315,  0.47905767,  -1.3434603,  0.0944918,   1.4836085,  -0.7327413,   -0.721259,   -1.0970628, 0.016058477,
    2.3972666,   1.8228414,   -0.22439277, -0.21240774, 0.33030552, -1.1901593,   -0.7450978,  0.3804554,  -0.68388087,
    0.41449362,  -0.9448323,  -1.0203263,  -0.5216434,  0.4024501,  0.24353234,   -0.73666686, 0.35560375, -0.45262334,
    1.2335021,   0.3995436,   0.51884985,  0.058904033, 0.11048507, -0.035977505, -0.17269671, 1.46373,    -0.56234497,
    0.13414554,  -1.1941557,  0.22183903,  2.0685835,   0.5894781,  -1.3302326};
  const int32_t input_1_ndim   = 3;
  const int32_t input_1_dims[] = {3, 4, 5};
  float         output_0[60];
  const int32_t output_0_ndim   = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float   answer_0[]      = {1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0,
                            0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0,
                            1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0,
                            0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0};
  using dragonite::norm;

  ONNC_RUNTIME_greater_float(nullptr, input_0, input_0_ndim, input_0_dims, input_1, input_1_ndim, input_1_dims,
                             output_0, output_0_ndim, output_0_dims);
  ASSERT_TRUE(norm(answer_0, output_0, 60) <= 1e-5 * norm(answer_0, 60));
}

SKYPAT_F(Operator_Greater, test_greater_bcast)
{
  const float input_0[] = {
    0.6431423,   -2.318165,   -1.7965572, -0.18133403, 1.8449306,  -0.17247197, 0.28562552,  1.4266219,  1.2774315,
    -0.41073725, -0.10100078, -1.4379952, -0.19012138, 0.5215831,  -0.667221,   -2.7951276,  -1.7387335, 0.36380422,
    -1.0998219,  -0.42775914, -1.7964034, -1.0053109,  -0.1404504, -1.0464001,  -0.08724502, 0.6418685,  -1.0157796,
    -1.2148204,  1.1446991,   1.7895362,  1.9238522,   -0.5836347, -0.538226,   0.13594294,  2.3115308,  0.20436664,
    0.97287923,  1.120038,    0.93284786, -0.33650485, 0.18451394, 0.36773342,  0.2028252,   0.7123637,  -1.1096997,
    0.5745139,   -0.3898312,  -0.1252293, 0.40898618,  0.48096102, 0.6260908,   -0.8706431,  0.9666531,  0.15058677,
    0.84623915,  -2.1735685,  -1.5587382, 0.26518282,  1.3292228,  1.057824};
  const int32_t input_0_ndim   = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float   input_1[]      = {0.65433466, 1.8136913, 0.4616298, -0.21576117, 0.12785101};
  const int32_t input_1_ndim   = 1;
  const int32_t input_1_dims[] = {5};
  float         output_0[60];
  const int32_t output_0_ndim   = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float   answer_0[]      = {0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0,
                            1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0,
                            0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0};
  using dragonite::norm;

  ONNC_RUNTIME_greater_float(nullptr, input_0, input_0_ndim, input_0_dims, input_1, input_1_ndim, input_1_dims,
                             output_0, output_0_ndim, output_0_dims);
  ASSERT_TRUE(norm(answer_0, output_0, 60) <= 1e-5 * norm(answer_0, 60));
}
