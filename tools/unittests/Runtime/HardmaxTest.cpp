#if defined(__GNUC__) || defined(_MSC_VER)
#define restrict __restrict
#else
#define restrict
#endif

extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}

#undef restrict

#include "relative-error.hpp"
#include <skypat/skypat.h>
SKYPAT_F(Operator_Hardmax, test_hardmax_example) {
  const float input_0[] = {3.0, 0.0, 1.0, 2.0, 2.0, 5.0, 1.0, 0.0,
                           0.0, 1.0, 3.0, 2.0, 0.0, 1.0, 2.0, 3.0};
  const int32_t input_0_ndim = 2;
  const int32_t input_0_dims[] = {4, 4};
  float output_0[16];
  const int32_t output_0_ndim = 2;
  const int32_t output_0_dims[] = {4, 4};
  const float answer_0[] = {1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0,
                            0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0};
  const int32_t axis = 1;
  ONNC_RUNTIME_hardmax_float(nullptr, input_0, input_0_ndim, input_0_dims,
                             output_0, output_0_ndim, output_0_dims, axis);
  ASSERT_TRUE(relative_error(output_0, answer_0, 16) < 1e-5f);
}

SKYPAT_F(Operator_Hardmax, test_hardmax_one_hot) {
  const float input_0[] = {3.0, 3.0, 3.0, 1.0};
  const int32_t input_0_ndim = 2;
  const int32_t input_0_dims[] = {1, 4};
  float output_0[4];
  const int32_t output_0_ndim = 2;
  const int32_t output_0_dims[] = {1, 4};
  const float answer_0[] = {1.0, 0.0, 0.0, 0.0};
  const int32_t axis = 1;
  ONNC_RUNTIME_hardmax_float(nullptr, input_0, input_0_ndim, input_0_dims,
                             output_0, output_0_ndim, output_0_dims, axis);
  ASSERT_TRUE(relative_error(output_0, answer_0, 4) < 1e-5f);
}

SKYPAT_F(Operator_Hardmax, test_hardmax_axis_0) {
  const float input_0[] = {
      0.4953171,   0.67364633,  0.6930528,   -0.5806603,  -1.1347984,
      0.7137621,   0.63490295,  0.97106385,  0.30625945,  -0.41248783,
      -0.7318329,  -1.0329298,  0.13069086,  -1.4671391,  2.0380228,
      1.0705596,   0.80409116,  0.43224105,  0.16059726,  -1.0838443,
      0.4237143,   -0.5482257,  0.49082294,  -0.39075583, 0.16706048,
      -0.58899117, 0.4628078,   -0.61214715, 0.48188844,  1.3550167,
      -1.7187027,  -0.21412393, 1.1043656,   0.31895924,  0.3600469,
      -2.071258,   -1.7162389,  0.45270938,  0.66409874,  -0.49213022,
      0.7065814,   0.6691004,   0.201011,    0.6851046,   -0.97908425,
      0.06508996,  -2.3593593,  -0.29392225, 0.6913543,   1.5249957,
      0.09933945,  -1.4143916,  0.0738694,   -0.15128958, -0.7907351,
      -0.3998794,  0.18700027,  -0.28407156, 0.6517603,   -0.5395897};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
  const int32_t axis = 0;
  ONNC_RUNTIME_hardmax_float(nullptr, input_0, input_0_ndim, input_0_dims,
                             output_0, output_0_ndim, output_0_dims, axis);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}

SKYPAT_F(Operator_Hardmax, test_hardmax_axis_1) {
  const float input_0[] = {
      0.4953171,   0.67364633,  0.6930528,   -0.5806603,  -1.1347984,
      0.7137621,   0.63490295,  0.97106385,  0.30625945,  -0.41248783,
      -0.7318329,  -1.0329298,  0.13069086,  -1.4671391,  2.0380228,
      1.0705596,   0.80409116,  0.43224105,  0.16059726,  -1.0838443,
      0.4237143,   -0.5482257,  0.49082294,  -0.39075583, 0.16706048,
      -0.58899117, 0.4628078,   -0.61214715, 0.48188844,  1.3550167,
      -1.7187027,  -0.21412393, 1.1043656,   0.31895924,  0.3600469,
      -2.071258,   -1.7162389,  0.45270938,  0.66409874,  -0.49213022,
      0.7065814,   0.6691004,   0.201011,    0.6851046,   -0.97908425,
      0.06508996,  -2.3593593,  -0.29392225, 0.6913543,   1.5249957,
      0.09933945,  -1.4143916,  0.0738694,   -0.15128958, -0.7907351,
      -0.3998794,  0.18700027,  -0.28407156, 0.6517603,   -0.5395897};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,
                            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,
                            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
  const int32_t axis = 1;
  ONNC_RUNTIME_hardmax_float(nullptr, input_0, input_0_ndim, input_0_dims,
                             output_0, output_0_ndim, output_0_dims, axis);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}

SKYPAT_F(Operator_Hardmax, test_hardmax_default_axis) {
  const float input_0[] = {
      0.4953171,   0.67364633,  0.6930528,   -0.5806603,  -1.1347984,
      0.7137621,   0.63490295,  0.97106385,  0.30625945,  -0.41248783,
      -0.7318329,  -1.0329298,  0.13069086,  -1.4671391,  2.0380228,
      1.0705596,   0.80409116,  0.43224105,  0.16059726,  -1.0838443,
      0.4237143,   -0.5482257,  0.49082294,  -0.39075583, 0.16706048,
      -0.58899117, 0.4628078,   -0.61214715, 0.48188844,  1.3550167,
      -1.7187027,  -0.21412393, 1.1043656,   0.31895924,  0.3600469,
      -2.071258,   -1.7162389,  0.45270938,  0.66409874,  -0.49213022,
      0.7065814,   0.6691004,   0.201011,    0.6851046,   -0.97908425,
      0.06508996,  -2.3593593,  -0.29392225, 0.6913543,   1.5249957,
      0.09933945,  -1.4143916,  0.0738694,   -0.15128958, -0.7907351,
      -0.3998794,  0.18700027,  -0.28407156, 0.6517603,   -0.5395897};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,
                            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,
                            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
  const int32_t axis = 1;
  ONNC_RUNTIME_hardmax_float(nullptr, input_0, input_0_ndim, input_0_dims,
                             output_0, output_0_ndim, output_0_dims, axis);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}

SKYPAT_F(Operator_Hardmax, test_hardmax_axis_2) {
  const float input_0[] = {
      0.4953171,   0.67364633,  0.6930528,   -0.5806603,  -1.1347984,
      0.7137621,   0.63490295,  0.97106385,  0.30625945,  -0.41248783,
      -0.7318329,  -1.0329298,  0.13069086,  -1.4671391,  2.0380228,
      1.0705596,   0.80409116,  0.43224105,  0.16059726,  -1.0838443,
      0.4237143,   -0.5482257,  0.49082294,  -0.39075583, 0.16706048,
      -0.58899117, 0.4628078,   -0.61214715, 0.48188844,  1.3550167,
      -1.7187027,  -0.21412393, 1.1043656,   0.31895924,  0.3600469,
      -2.071258,   -1.7162389,  0.45270938,  0.66409874,  -0.49213022,
      0.7065814,   0.6691004,   0.201011,    0.6851046,   -0.97908425,
      0.06508996,  -2.3593593,  -0.29392225, 0.6913543,   1.5249957,
      0.09933945,  -1.4143916,  0.0738694,   -0.15128958, -0.7907351,
      -0.3998794,  0.18700027,  -0.28407156, 0.6517603,   -0.5395897};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,
                            0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0,
                            1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,
                            1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0};
  const int32_t axis = 2;
  ONNC_RUNTIME_hardmax_float(nullptr, input_0, input_0_ndim, input_0_dims,
                             output_0, output_0_ndim, output_0_dims, axis);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}
