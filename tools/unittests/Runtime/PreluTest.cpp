#if defined(__GNUC__) || defined(_MSC_VER)
#  define restrict __restrict
#else
#  define restrict
#endif

extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}

#undef restrict

#include "norm.hpp"
#include <skypat/skypat.h>
SKYPAT_F(Operator_PRelu, test_prelu_example)
{
  const float input_0[] = {
    -0.13276604,  2.1121202,   -1.4747167,  -0.5447096, 0.13838142,  1.2653171,  -0.21784125, -1.6625859, -0.47006232,
    -0.91449153,  -0.7957077,  -0.9707749,  -1.0550878, 0.9862753,   0.90851295, -0.46069154, -2.0946007, -0.9531365,
    0.24460278,   0.97128516,  -0.39692885, -0.79436,   -1.1898882,  -0.4895055, -1.8329114,  -0.7829373, -1.1925471,
    -0.32802984,  -0.74533856, 0.8791371,   0.5224859,  0.39687094,  -2.4173334, -0.61401606, 0.9384719,  -0.73905706,
    -0.015291702, -0.23069522, -0.09193945, -1.0208594, 0.056208193, 1.2254739,  -1.4742762,  0.6592631,  -1.1179262,
    -0.80241585,  -1.4453499,  0.7148259,   -0.6291495, 0.3010308,   -1.8381306, 0.3787793,   0.06523095, -0.190016,
    1.4616518,    -0.52340394, 0.04840245,  -0.3706737, 0.27724248,  0.12614828};
  const int32_t input_0_ndim   = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float   input_1[] = {-0.14057821, -0.81969345, 2.2643356,   -0.20764588, 0.7644367,   1.2984384,    -0.25921518,
                           -1.7542485,  -1.041878,   -1.3645,     -2.159494,   1.3265558,   0.3527707,    -0.8319374,
                           -0.7948281,  -0.6512914,  -0.33527634, -0.59737116, -1.0545361,  0.21319643,   -1.0433749,
                           1.0228329,   0.35788238,  -0.11735985, 1.6347001,   1.5376357,   0.70704246,   1.4803963,
                           -1.5506777,  -0.7842219,  -0.11869454, 0.047077395, 0.32678008,  0.482725,     1.7844982,
                           -0.26183304, -1.6313252,  0.7269072,   -2.292428,   -0.49877703, -1.239196,    1.8923719,
                           0.20884696,  0.641333,    0.20543319,  -0.5044489,  -1.0420284,  -0.051636208, -1.6821072,
                           -1.0568546,  1.1488303,   -0.66336423, 1.3183173,   1.627133,    0.92731875,   2.4580004,
                           0.8300574,   -1.3204036,  1.4360526,   -0.3149639};
  const int32_t input_1_ndim   = 3;
  const int32_t input_1_dims[] = {3, 4, 5};
  float         output_0[60];
  const int32_t output_0_ndim   = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float   answer_0[]      = {
    0.018664012, 2.1121202,   -3.3392534, 0.113106705, 0.13838142,  1.2653171,   0.05646776, 2.9165888,  0.48974758,
    1.2478237,   1.718326,    -1.2877871, -0.37220404, 0.9862753,   0.90851295,  0.30004442, 0.70227003, 0.56937623,
    0.24460278,  0.97128516,  0.4141456,  -0.8124975,  -0.42584005, 0.05744829,  -2.9962604, -1.2038723, -0.84318143,
    -0.48561415, 1.1557798,   0.8791371,  0.5224859,   0.39687094,  -0.78993636, -0.2964009, 0.9384719,  0.19350956,
    0.02494574,  -0.16769402, 0.21076457, 0.5091812,   0.056208193, 1.2254739,   -0.3078981, 0.6592631,  -0.22965916,
    0.4047778,   1.5060958,   0.7148259,  1.0582969,   0.3010308,   -2.1117,     0.3787793,  0.06523095, -0.3091813,
    1.4616518,   -1.2865272,  0.04840245, 0.48943886,  0.27724248,  0.12614828};
  using dragonite::norm;

  ONNC_RUNTIME_prelu_float(nullptr, input_0, input_0_ndim, input_0_dims, input_1, input_1_ndim, input_1_dims, output_0,
                           output_0_ndim, output_0_dims);
  ASSERT_TRUE(norm(answer_0, output_0, 60) <= 1e-5 * norm(answer_0, 60));
}

SKYPAT_F(Operator_PRelu, test_prelu_broadcast)
{
  const float input_0[] = {
    -0.9570122,   -0.09197713,   1.5232785,    -0.54999703, 2.1397908,   1.2704479,   1.238362,    -0.36904088,
    0.3230801,    0.6826014,     -0.0175439,   -1.4632323,  0.3000738,   -0.19236223, 0.09630482,  0.40319768,
    -0.8037275,   0.21561138,    -0.17681849,  -0.5867939,  -0.14279185, 0.90854836,  2.3110914,   -0.3124131,
    -0.0349879,   -0.17568548,   -0.80363023,  0.1994967,   -0.5232931,  0.12722236,  -1.447624,   -0.65388495,
    0.24925892,   -1.1898444,    -0.08156251,  0.29940024,  0.34371433,  -0.07207051, 0.7092186,   -0.29985082,
    -0.061392765, -0.31323996,   -0.28437045,  1.6354024,   -0.8640534,  -1.0611377,  0.023031307, -0.022602608,
    -1.046121,    -0.0027499427, -0.031504583, -0.40337107, 1.1548415,   -0.5970678,  -1.3649712,  -0.61323273,
    0.2296727,    -0.7208773,    1.1567576,    1.2516366};
  const int32_t input_0_ndim   = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float   input_1[]      = {-1.2095337, 0.8186244, -0.12441821, -0.45238206, 1.306792};
  const int32_t input_1_ndim   = 1;
  const int32_t input_1_dims[] = {5};
  float         output_0[60];
  const int32_t output_0_ndim   = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float   answer_0[] = {1.1575384,     -0.07529472, 1.5232785,   0.24880879,  2.1397908,   1.2704479,   1.238362,
                            0.045915402,   0.3230801,   0.6826014,   0.021219939, -1.1978376,  0.3000738,   0.087021224,
                            0.09630482,    0.40319768,  -0.65795094, 0.21561138,  0.079989515, -0.76681757, 0.17271155,
                            0.90854836,    2.3110914,   0.14133008,  -0.04572191, 0.2124975,   -0.6578713,  0.1994967,
                            0.2367284,     0.12722236,  1.75095,     -0.5352861,  0.24925892,  0.5382642,   -0.10658524,
                            0.29940024,    0.34371433,  0.008966884, 0.7092186,   -0.39184266, 0.07425662,  -0.25642586,
                            0.035380863,   1.6354024,   -1.1291381,  1.2834817,   0.023031307, 0.002812176, 0.47324637,
                            -0.0035936031, 0.038105853, -0.33020937, 1.1548415,   0.27010274,  -1.7837334,  0.7417256,
                            0.2296727,     0.08969026,  1.1567576,   1.2516366};
  using dragonite::norm;

  ONNC_RUNTIME_prelu_float(nullptr, input_0, input_0_ndim, input_0_dims, input_1, input_1_ndim, input_1_dims, output_0,
                           output_0_ndim, output_0_dims);
  ASSERT_TRUE(norm(answer_0, output_0, 60) <= 1e-5 * norm(answer_0, 60));
}
