#include <cmath>
#include <cstdlib>
#include <ctime>
#include <skypat/skypat.h>
#include <vector>

#define restrict
extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}
SKYPAT_F(Operator_PRelu, test_prelu_example) {
  const float input_0[3][4][5] = {
      {{-0.042816877365112305, 1.3332221508026123, 0.7068855166435242,
        -2.232844114303589, -0.43720701336860657},
       {-0.4372220039367676, -1.1397720575332642, -0.5907431244850159,
        2.3962628841400146, 0.6709375977516174},
       {-1.711350440979004, 0.6142054796218872, -0.7905923128128052,
        0.3944239914417267, -0.9230949282646179},
       {0.19036108255386353, -2.0390336513519287, 0.008295098319649696,
        -0.3179038465023041, 0.2549211084842682}},
      {{-0.21637721359729767, 1.6087777614593506, 1.3278065919876099,
        -0.12262839823961258, 0.6967151165008545},
       {-0.2378961741924286, 0.8723132610321045, 0.21179355680942535,
        -0.47245854139328003, 0.6005082130432129},
       {1.373664140701294, -1.4298986196517944, -1.4773621559143066,
        1.0809142589569092, -0.5494952201843262},
       {-0.6856063008308411, -0.905850350856781, -0.5986508131027222,
        -0.9067187905311584, -0.5339184403419495}},
      {{0.6125768423080444, 0.09076893329620361, 1.840558409690857,
        0.058009274303913116, -0.8819814324378967},
       {0.5728617906570435, -0.3303755819797516, 0.3352161645889282,
        1.0191826820373535, 0.13359075784683228},
       {1.519408941268921, 0.27046045660972595, -0.7637115120887756,
        0.19519494473934174, -0.22769799828529358},
       {0.423282265663147, 0.10002308338880539, -0.09693936258554459,
        0.46341049671173096, 1.5763096809387207}}};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[3][4][5] = {
      {{0.3346751928329468, -1.121274709701538, -0.4366307854652405,
        -0.9239994883537292, -1.15809965133667},
       {0.4265683889389038, 1.0896819829940796, 0.5595412254333496,
        0.2682228088378906, -1.5434976816177368},
       {-0.8813716173171997, -0.15754348039627075, -1.0474529266357422,
        -1.149733066558838, -0.8451099395751953},
       {0.708901047706604, 0.6687419414520264, 0.5580670833587646,
        -0.18002982437610626, 0.40610069036483765}},
      {{1.0363004207611084, 0.18712416291236877, 1.8534268140792847,
        0.08164167404174805, 0.43830209970474243},
       {-1.7239214181900024, 2.1418299674987793, -2.3086066246032715,
        -1.0631479024887085, 1.0105962753295898},
       {1.832344651222229, 0.12132178246974945, -1.5078965425491333,
        0.14110302925109863, -0.3461761772632599},
       {-0.1994081735610962, -0.2119685709476471, 0.2306845337152481,
        0.25287917256355286, 0.9598489999771118}},
      {{-0.9497209191322327, 0.5510766506195068, 0.9387049674987793,
        -0.1530563235282898, -0.3853425085544586},
       {-0.3923053741455078, 0.698875904083252, 0.25665873289108276,
        1.2070327997207642, -0.5595495104789734},
       {-2.4374656677246094, 0.6284337639808655, 2.2085931301116943,
        -1.0919159650802612, -1.1066575050354004},
       {-0.5506759285926819, -0.682321310043335, -1.6049617528915405,
        0.13729190826416016, 0.3511320650577545}}};
  const int32_t input_1_ndim = 3;
  const int32_t input_1_dims[] = {3, 4, 5};
  float output_0[3][4][5];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[3][4][5] = {
      {{-0.01432974636554718, 1.3332221508026123, 0.7068855166435242,
        2.0631468296051025, 0.5063292980194092},
       {-0.18650507926940918, -1.241989016532898, -0.3305451273918152,
        2.3962628841400146, 0.6709375977516174},
       {1.5083357095718384, 0.6142054796218872, 0.8281082510948181,
        0.3944239914417267, 0.7801166772842407},
       {0.19036108255386353, -1.3635873794555664, 0.008295098319649696,
        0.05723217502236366, 0.2549211084842682}},
      {{-0.2242317944765091, 1.6087777614593506, 1.3278065919876099,
        -0.010011587291955948, 0.6967151165008545},
       {0.4101143181324005, 0.8723132610321045, 0.21179355680942535,
        0.5022932887077332, 0.6005082130432129},
       {1.373664140701294, -0.17347784340381622, 2.2277092933654785,
        1.0809142589569092, 0.19022215902805328},
       {0.13671550154685974, 0.19201180338859558, -0.13809947669506073,
        -0.22929029166698456, -0.5124810934066772}},
      {{0.6125768423080444, 0.09076893329620361, 1.840558409690857,
        0.058009274303913116, 0.33986493945121765},
       {0.5728617906570435, -0.23089154064655304, 0.3352161645889282,
        1.0191826820373535, 0.13359075784683228},
       {1.519408941268921, 0.27046045660972595, -1.6867280006408691,
        0.19519494473934174, 0.2519837021827698},
       {0.423282265663147, 0.10002308338880539, 0.1555839627981186,
        0.46341049671173096, 1.5763096809387207}}};
  ONNC_RUNTIME_prelu_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                           (float *)input_1, input_1_ndim, input_1_dims,
                           (float *)output_0, output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3 * 4 * 5; ++i) {
    if (std::abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}

SKYPAT_F(Operator_PRelu, test_prelu_broadcast) {
  const float input_0[3][4][5] = {
      {{0.6141126155853271, 1.0849616527557373, -1.116099238395691,
        0.3185287117958069, 1.7666114568710327},
       {-0.5750988721847534, -0.0071463193744421005, 0.4193355441093445,
        -0.6403208374977112, -0.2500225305557251},
       {-1.4183465242385864, 0.9235730171203613, 0.17659419775009155,
        0.06771673262119293, -0.10805650800466537},
       {1.9653395414352417, 2.185378313064575, 0.0854744091629982,
        -0.6901530027389526, 0.5455683469772339}},
      {{-0.2182846963405609, 1.0561569929122925, -0.525722324848175,
        -0.11232167482376099, 0.9925602078437805},
       {-0.2797320485115051, 1.1551719903945923, 0.1477590650320053,
        0.8486327528953552, 0.12964588403701782},
       {0.8149117231369019, -2.4410486221313477, 0.11566873639822006,
        1.2517045736312866, -0.7578735947608948},
       {-1.2345012426376343, 0.6562700271606445, 0.02746363915503025,
        -0.8229095935821533, -0.28906095027923584}},
      {{0.59055495262146, -0.088465616106987, 0.4361056685447693,
        0.3473914861679077, 1.4275853633880615},
       {0.5516855716705322, 0.4463031589984894, -0.7838148474693298,
        0.3183734714984894, -1.084293007850647},
       {0.3142887055873871, 0.014151223935186863, -0.07315671443939209,
        -0.874309778213501, 1.4228332042694092},
       {2.0636680126190186, 2.4335482120513916, 2.242811918258667,
        -1.1599136590957642, -0.34387344121932983}}};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[5] = {0.6334782838821411, -0.6756082773208618,
                            0.9476594924926758, 2.094109535217285,
                            0.44836241006851196};
  const int32_t input_1_ndim = 1;
  const int32_t input_1_dims[] = {5};
  float output_0[3][4][5];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[3][4][5] = {
      {{0.6141126155853271, 1.0849616527557373, -1.0576820373535156,
        0.3185287117958069, 1.7666114568710327},
       {-0.36431264877319336, 0.004828112665563822, 0.4193355441093445,
        -1.3409019708633423, -0.11210070550441742},
       {-0.8984917402267456, 0.9235730171203613, 0.17659419775009155,
        0.06771673262119293, -0.04844847694039345},
       {1.9653395414352417, 2.185378313064575, 0.0854744091629982,
        -1.445255994796753, 0.5455683469772339}},
      {{-0.13827861845493317, 1.0561569929122925, -0.4982057511806488,
        -0.23521389067173004, 0.9925602078437805},
       {-0.1772041767835617, 1.1551719903945923, 0.1477590650320053,
        0.8486327528953552, 0.12964588403701782},
       {0.8149117231369019, 1.6491926908493042, 0.11566873639822006,
        1.2517045736312866, -0.3398020267486572},
       {-0.7820297479629517, 0.6562700271606445, 0.02746363915503025,
        -1.7232627868652344, -0.12960407137870789}},
      {{0.59055495262146, 0.05976810306310654, 0.4361056685447693,
        0.3473914861679077, 1.4275853633880615},
       {0.5516855716705322, 0.4463031589984894, -0.7427895665168762,
        0.3183734714984894, -0.4861562252044678},
       {0.3142887055873871, 0.014151223935186863, -0.06932765245437622,
        -1.8309004306793213, 1.4228332042694092},
       {2.0636680126190186, 2.4335482120513916, 2.242811918258667,
        -2.4289863109588623, -0.15417993068695068}}};
  ONNC_RUNTIME_prelu_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                           (float *)input_1, input_1_ndim, input_1_dims,
                           (float *)output_0, output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3 * 4 * 5; ++i) {
    if (std::abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}
