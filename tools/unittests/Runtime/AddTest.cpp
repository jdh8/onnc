#include <cmath>
#include <cstdlib>
#include <ctime>
#include <skypat/skypat.h>
#include <vector>

#define restrict
extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}
SKYPAT_F(Operator_Add, test_add) {
  const float input_0[3][4][5] = {
      {{-0.2162165343761444, 1.846372127532959, -0.8403281569480896,
        0.34318193793296814, 1.307922124862671},
       {0.05142566189169884, -0.17069682478904724, 1.0892958641052246,
        -2.386798620223999, -1.1882271766662598},
       {1.8854972124099731, -0.6642116904258728, -1.2424207925796509,
        -0.3934134244918823, 0.621362030506134},
       {-0.04450603201985359, -0.019724339246749878, 1.3888200521469116,
        2.4181106090545654, 1.1273339986801147}},
      {{-0.36918607354164124, 1.6154121160507202, 1.8119040727615356,
        -0.9885136485099792, 0.3482268750667572},
       {0.3992029130458832, 0.7761014103889465, -0.9005129337310791,
        -1.0241162776947021, -0.1922207772731781},
       {0.7583910822868347, 0.6355065107345581, 1.6590335369110107,
        -0.7360135316848755, -0.03786289319396019},
       {0.22525015473365784, -0.44872692227363586, -0.49028974771499634,
        -0.37285250425338745, -0.0678364560008049}},
      {{0.31526586413383484, 0.5509101748466492, -0.05705132707953453,
        -1.2261102199554443, 0.49912747740745544},
       {1.992926836013794, -0.36518776416778564, 0.4053761959075928,
        1.1653828620910645, -1.0436338186264038},
       {1.62653386592865, -0.11311138421297073, 1.3772003650665283,
        -0.27841809391975403, -0.6127945184707642},
       {0.5631749629974365, 0.08430656790733337, -0.6396965980529785,
        -1.7539565563201904, -0.05260958522558212}}};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[3][4][5] = {
      {{-0.3110537827014923, 0.1454915851354599, -0.9380084276199341,
        -1.0341838598251343, 0.48743119835853577},
       {-0.7810320854187012, -0.09892596304416656, -0.3698938190937042,
        0.39402514696121216, 0.8867809176445007},
       {0.08090300858020782, -1.762162446975708, -0.33747467398643494,
        0.1299123913049698, 1.8902206420898438},
       {0.9120389819145203, -0.09992190450429916, -0.5743266344070435,
        0.56135493516922, -0.3525462746620178}},
      {{0.024863481521606445, -0.5680375695228577, -1.1985055208206177,
        -1.7548058032989502, 1.3934577703475952},
       {-1.4378551244735718, -1.4028370380401611, -0.9963595867156982,
        1.5991872549057007, -0.8601108193397522},
       {1.0659981966018677, 0.3427205979824066, -1.0747301578521729,
        -1.4887785911560059, -2.7295143604278564},
       {-0.2857578694820404, -0.9655423164367676, 0.4120684564113617,
        0.44857627153396606, -0.20547208189964294}},
      {{0.31775638461112976, 2.497633218765259, 1.4413503408432007,
        -0.4148288369178772, -0.13260504603385925},
       {-0.3224587142467499, 1.21977698802948, -1.0479381084442139,
        0.7275856137275696, 0.7710199356079102},
       {-0.2171652466058731, -0.8033969402313232, -1.59486985206604,
        -1.0107672214508057, -0.6520055532455444},
       {-1.8403568267822266, -1.4711313247680664, 1.2639397382736206,
        -1.9014354944229126, -0.05386492982506752}}};
  const int32_t input_1_ndim = 3;
  const int32_t input_1_dims[] = {3, 4, 5};
  float output_0[3][4][5];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[3][4][5] = {
      {{-0.5272703170776367, 1.99186372756958, -1.778336524963379,
        -0.6910018920898438, 1.7953532934188843},
       {-0.7296064496040344, -0.269622802734375, 0.7194020748138428,
        -1.9927735328674316, -0.30144625902175903},
       {1.9664002656936646, -2.4263741970062256, -1.5798954963684082,
        -0.26350104808807373, 2.511582612991333},
       {0.8675329685211182, -0.11964624375104904, 0.8144934177398682,
        2.9794654846191406, 0.7747877240180969}},
      {{-0.3443225920200348, 1.0473744869232178, 0.613398551940918,
        -2.743319511413574, 1.7416846752166748},
       {-1.0386521816253662, -0.6267356276512146, -1.8968725204467773,
        0.5750709772109985, -1.052331566810608},
       {1.8243892192840576, 0.9782271385192871, 0.5843033790588379,
        -2.224792003631592, -2.7673771381378174},
       {-0.06050771474838257, -1.414269208908081, -0.07822129130363464,
        0.07572376728057861, -0.27330854535102844}},
      {{0.6330222487449646, 3.0485434532165527, 1.3842990398406982,
        -1.6409389972686768, 0.3665224313735962},
       {1.6704680919647217, 0.8545892238616943, -0.6425619125366211,
        1.8929684162139893, -0.27261388301849365},
       {1.409368634223938, -0.9165083169937134, -0.21766948699951172,
        -1.2891852855682373, -1.2648000717163086},
       {-1.27718186378479, -1.3868247270584106, 0.6242431402206421,
        -3.6553921699523926, -0.10647451877593994}}};
  ONNC_RUNTIME_add_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                         (float *)input_1, input_1_ndim, input_1_dims,
                         (float *)output_0, output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3 * 4 * 5; ++i) {
    if (abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}

SKYPAT_F(Operator_Add, test_add_bcast) {
  const float input_0[3][4][5] = {
      {{0.4138709306716919, -1.3304424285888672, 0.5517084002494812,
        -0.14554446935653687, -1.2982618808746338},
       {1.6086875200271606, -0.5427537560462952, 1.1497995853424072,
        -0.7258173227310181, 0.18603937327861786},
       {-0.48245829343795776, 1.3939118385314941, 0.2284301221370697,
        -0.2696060240268707, -0.23885324597358704},
       {0.3275676667690277, -2.2373108863830566, -0.5459481477737427,
        0.6219715476036072, 0.5229089856147766}},
      {{-0.4843766987323761, -1.2474035024642944, 0.1972074955701828,
        -0.0008352002478204668, 0.16603456437587738},
       {-0.5038378834724426, -0.22983945906162262, 2.0051865577697754,
        -0.6250556111335754, -1.2951308488845825},
       {0.08763368427753448, -1.395655632019043, -0.5404351949691772,
        3.09407114982605, -0.06740866601467133},
       {-0.7815185189247131, -0.7712029814720154, 1.1481571197509766,
        2.0882227420806885, 0.249567911028862}},
      {{1.2473832368850708, -0.06040032207965851, 0.4905349612236023,
        0.9511745572090149, 0.47458747029304504},
       {-1.1284544467926025, -1.3184839487075806, 0.7496556043624878,
        -0.6341596245765686, 0.7693234086036682},
       {-1.5279343128204346, 1.1953625679016113, -0.035437893122434616,
        1.0656534433364868, -0.11083214730024338},
       {0.06599749624729156, -0.39771199226379395, -0.953919529914856,
        0.6906070113182068, 0.6740390658378601}}};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[5] = {0.6196569800376892, 0.7101802229881287,
                            0.6466158628463745, -0.3156576156616211,
                            -1.1983436346054077};
  const int32_t input_1_ndim = 1;
  const int32_t input_1_dims[] = {5};
  float output_0[3][4][5];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[3][4][5] = {
      {{1.0335278511047363, -0.6202622056007385, 1.198324203491211,
        -0.46120208501815796, -2.496605396270752},
       {2.228344440460205, 0.1674264669418335, 1.7964154481887817,
        -1.0414749383926392, -1.0123043060302734},
       {0.13719868659973145, 2.1040921211242676, 0.8750460147857666,
        -0.5852636098861694, -1.4371968507766724},
       {0.9472246170043945, -1.5271306037902832, 0.10066771507263184,
        0.3063139319419861, -0.6754346489906311}},
      {{0.1352802813053131, -0.5372232794761658, 0.8438233733177185,
        -0.31649282574653625, -1.0323090553283691},
       {0.11581909656524658, 0.48034077882766724, 2.6518025398254395,
        -0.9407132267951965, -2.4934744834899902},
       {0.7072906494140625, -0.6854754090309143, 0.10618066787719727,
        2.7784135341644287, -1.2657523155212402},
       {-0.16186153888702393, -0.06102275848388672, 1.794772982597351,
        1.7725651264190674, -0.9487757086753845}},
      {{1.8670401573181152, 0.6497799158096313, 1.137150764465332,
        0.6355169415473938, -0.7237561941146851},
       {-0.5087974667549133, -0.6083037257194519, 1.3962714672088623,
        -0.9498172402381897, -0.4290202260017395},
       {-0.9082773327827454, 1.9055428504943848, 0.6111779808998108,
        0.7499958276748657, -1.309175729751587},
       {0.6856544613838196, 0.3124682307243347, -0.30730366706848145,
        0.3749493956565857, -0.5243045687675476}}};
  ONNC_RUNTIME_add_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                         (float *)input_1, input_1_ndim, input_1_dims,
                         (float *)output_0, output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3 * 4 * 5; ++i) {
    if (abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}
