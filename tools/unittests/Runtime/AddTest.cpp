#if defined(__GNUC__) || defined(_MSC_VER)
#  define restrict __restrict
#else
#  define restrict
#endif

extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}

#undef restrict

#include "norm.hpp"
#include <skypat/skypat.h>
SKYPAT_F(Operator_Add, test_add)
{
  const float input_0[] = {
    -0.36801377, -0.92198366,  -0.9911276,  -1.3302574,  0.31107742, 0.18348266,  -0.9940978,  0.38199872,  0.2838384,
    0.77972466,  -0.75524485,  0.36539468,  -1.3194937,  -1.4110402, -0.62555957, -0.6386861,  -0.88593113, -0.6828041,
    0.4079139,   0.0071642403, 1.1685348,   -0.2966488,  -1.2683774, 2.2176676,   0.13776334,  -1.1241603,  -0.2125407,
    -0.91293716, 0.14597625,   -0.19619566, -1.5812815,  0.1927424,  0.9177824,   -1.6466473,  -0.16071805, -0.5280592,
    -1.1590499,  0.1704899,    0.15839896,  -0.707072,   0.9417636,  1.7776456,   -0.9891167,  -1.0095606,  0.18855211,
    0.9695293,   0.5452408,    -0.9400126,  0.7028255,   1.3319951,  0.6171533,   -0.20997904, 0.19606371,  -2.101278,
    -1.5258352,  0.0005814896, -1.2356759,  -0.41834012, -2.1800206, 1.0212649};
  const int32_t input_0_ndim   = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float   input_1[]      = {
    -0.3850004,  1.3992915,  2.6904407,   0.49749482,   -0.3654901,   0.097417004, -1.6956826,  -0.19286512, 1.1896538,
    -0.71258444, -0.5844965, -0.14321898, 0.9778391,    -0.023611149, -0.7870258,  -0.21151015, -0.11755625, -0.7364497,
    0.9324954,   0.16738766, -0.44334707, -0.19453457,  -2.2920992,   0.10958437,  0.027240805, -1.7086326,  -1.1604748,
    -1.3493527,  0.9920045,  0.56811684,  -1.17018,     -1.4423896,   -1.4320145,  0.1032353,   0.5610818,   1.4699422,
    0.7937593,   -1.365833,  -0.1932435,  0.0062711937, -1.1821282,   -1.3315867,  -0.5729961,  0.5985125,   0.64974064,
    -0.2581243,  1.2487032,  1.7457983,   0.01592334,   -0.60522234,  -1.437062,   -0.33665866, 0.15354505,  0.2589791,
    0.533816,    0.71852815, 0.1167412,   -0.5036554,   0.8516454,    1.3269725};
  const int32_t input_1_ndim   = 3;
  const int32_t input_1_dims[] = {3, 4, 5};
  float         output_0[60];
  const int32_t output_0_ndim   = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float   answer_0[]      = {
    -0.7530142,  0.47730786, 1.699313,     -0.8327626,  -0.054412693, 0.28089967,  -2.6897805,  0.1891336,  1.4734921,
    0.06714022,  -1.3397413, 0.2221757,    -0.34165454, -1.4346514,   -1.4125854,  -0.85019624, -1.0034873, -1.4192538,
    1.3404093,   0.1745519,  0.72518766,   -0.49118337, -3.5604768,   2.327252,    0.16500413,  -2.8327928, -1.3730155,
    -2.26229,    1.1379807,  0.37192118,   -2.7514615,  -1.2496471,   -0.51423204, -1.5434121,  0.40036377, 0.941883,
    -0.36529058, -1.1953431, -0.034844548, -0.70080084, -0.24036461,  0.44605887,  -1.5621128,  -0.4110481, 0.8382927,
    0.711405,    1.7939441,  0.8057858,    0.7187488,   0.7267728,    -0.81990874, -0.5466377,  0.34960878, -1.842299,
    -0.9920192,  0.71910965, -1.1189348,   -0.9219955,  -1.3283751,   2.3482375};
  using dragonite::norm;

  ONNC_RUNTIME_add_float(nullptr, input_0, input_0_ndim, input_0_dims, input_1, input_1_ndim, input_1_dims, output_0,
                         output_0_ndim, output_0_dims);
  ASSERT_TRUE(norm(answer_0, output_0, 60) <= 1e-5 * norm(answer_0, 60));
}

SKYPAT_F(Operator_Add, test_add_bcast)
{
  const float   input_0[] = {0.92684495, -0.12880753,  -1.8898841,  0.5679585,   -2.678194,    -0.3808199,  -0.6821608,
                           -0.3908543, 1.3990805,    -1.8468579,  0.8549199,   -2.324198,    -1.072078,   -0.15028143,
                           0.34829378, -0.33642358,  0.19690193,  2.2933462,   -0.5755199,   0.09716655,  1.2011254,
                           -0.6308791, 0.64939207,   -1.0076861,  1.0815569,   1.3448936,    -0.40682286, 2.6951005,
                           0.8328938,  -0.3408079,   0.7136606,   1.1917528,   -0.17110284,  -0.69768804, 0.22417673,
                           -1.6509883, -0.6615881,   1.1559411,   0.9835891,   -0.022913275, -1.1808778,  -1.3452469,
                           -1.0787494, -0.26338488,  -0.66237396, -0.21054882, 0.66317356,   0.082398124, 0.85559314,
                           -0.7041363, -0.027525872, 0.5023732,   0.62106746,  0.6894621,    -1.0917517,  0.14841525,
                           1.6641042,  -0.6762114,   1.5109608,   0.040652458};
  const int32_t input_0_ndim   = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float   input_1[]      = {-1.3165752, -0.21831484, 0.34395674, 1.0535972, -0.5099103};
  const int32_t input_1_ndim   = 1;
  const int32_t input_1_dims[] = {5};
  float         output_0[60];
  const int32_t output_0_ndim   = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float   answer_0[]      = {
    -0.38973022, -0.34712237, -1.5459274,   1.6215557,   -3.1881044, -1.6973951,  -0.9004756, -0.04689756,  2.4526777,
    -2.3567681,  -0.46165526, -2.542513,    -0.7281213,  0.9033158,  -0.1616165,  -1.6529987, -0.021412909, 2.6373029,
    0.4780773,   -0.41274375, -0.115449786, -0.84919393, 0.99334884, 0.045911074, 0.57164663, 0.028318405,  -0.6251377,
    3.0390573,   1.8864911,   -0.8507182,   -0.6029146,  0.97343796, 0.1728539,   0.35590917, -0.28573355,  -2.9675636,
    -0.8799029,  1.4998978,   2.0371864,    -0.53282356, -2.497453,  -1.5635618,  -0.7347927, 0.79021233,   -1.1722842,
    -1.5271239,  0.44485873,  0.42635486,   1.9091904,   -1.2140466, -1.3441011,  0.2840584,  0.96502423,   1.7430594,
    -1.6016619,  -1.16816,    1.4457893,    -0.33225468, 2.564558,   -0.46925783};
  using dragonite::norm;

  ONNC_RUNTIME_add_float(nullptr, input_0, input_0_ndim, input_0_dims, input_1, input_1_ndim, input_1_dims, output_0,
                         output_0_ndim, output_0_dims);
  ASSERT_TRUE(norm(answer_0, output_0, 60) <= 1e-5 * norm(answer_0, 60));
}
