#if defined(__GNUC__) || defined(_MSC_VER)
#define restrict __restrict
#else
#define restrict
#endif

extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}

#undef restrict

#include "relative-error.hpp"
#include <skypat/skypat.h>
SKYPAT_F(Operator_Add, test_add) {
  const float input_0[] = {
      0.12728515,  -0.609455,   0.4281053,   0.24151577,  -0.5795751,
      -0.5931357,  1.1169394,   -1.4570146,  1.2822485,   1.6004277,
      0.027398711, -0.7585558,  0.53807324,  -0.8844358,  0.83896434,
      -0.669191,   1.4237818,   0.6485299,   1.2774833,   -0.43236935,
      1.3055139,   -0.2807939,  0.4435298,   0.8861732,   0.88300407,
      -1.2169294,  2.1855724,   0.17433842,  -1.2345259,  -0.089680925,
      0.08095433,  -0.38923,    -0.7502052,  -0.51378185, -0.424628,
      -0.18172042, 1.6210599,   -0.74068934, -0.4117435,  -1.2445356,
      1.087948,    -0.5983813,  -0.25065017, 1.0134714,   -0.5777559,
      0.2302474,   -0.23684102, 0.124349385, 1.1949153,   -0.821315,
      -0.37326592, 0.19709249,  -0.10320239, 0.9520769,   0.21502721,
      -1.0877302,  1.9941981,   0.14854665,  0.3201375,   0.76504475};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[] = {
      2.2339597,   1.0968095,    -0.047895506, 0.070056275,  -0.707193,
      1.231952,    -0.80306363,  1.2235137,    0.9309301,    0.21105489,
      -0.45505944, 0.60729474,   -1.1083913,   -0.44198045,  0.48570326,
      -0.32797197, 0.905187,     -1.7135255,   -2.2750068,   -0.4816542,
      -2.9607937,  -0.48111537,  -0.8143117,   -1.3737569,   -0.3293303,
      -0.1546835,  1.2202717,    -1.6763016,   0.04788497,   0.5398097,
      0.16908275,  0.32243058,   1.3197144,    -1.9015807,   0.789167,
      -0.67255265, -0.038909744, 1.9724905,    0.76423657,   0.17724521,
      -0.3781278,  0.24867092,   -1.6549244,   1.3983665,    1.7421212,
      0.70653975,  -0.016110273, 0.40036413,   -1.7953099,   0.32397822,
      -0.68696994, -1.2115908,   -0.08026857,  -0.110769115, -0.039954618,
      0.11169086,  1.2177355,    0.12526006,   0.75454867,   2.2923818};
  const int32_t input_1_ndim = 3;
  const int32_t input_1_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {
      2.361245,    0.48735452,  0.3802098,   0.31157205, -1.2867682,
      0.63881624,  0.3138758,   -0.23350084, 2.2131786,  1.8114827,
      -0.42766073, -0.15126109, -0.57031804, -1.3264163, 1.3246676,
      -0.99716294, 2.3289688,   -1.0649956,  -0.9975234, -0.9140235,
      -1.6552799,  -0.76190925, -0.37078187, -0.4875837, 0.55367374,
      -1.3716129,  3.4058442,   -1.5019631,  -1.186641,  0.4501288,
      0.25003707,  -0.06679943, 0.5695092,   -2.4153626, 0.364539,
      -0.8542731,  1.5821501,   1.2318013,   0.35249308, -1.0672903,
      0.70982015,  -0.34971035, -1.9055746,  2.4118378,  1.1643653,
      0.9367871,   -0.2529513,  0.5247135,   -0.6003946, -0.49733678,
      -1.0602359,  -1.0144982,  -0.18347096, 0.8413078,  0.1750726,
      -0.9760393,  3.2119336,   0.2738067,   1.0746862,  3.0574265};
  ONNC_RUNTIME_add_float(nullptr, input_0, input_0_ndim, input_0_dims, input_1,
                         input_1_ndim, input_1_dims, output_0, output_0_ndim,
                         output_0_dims);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}

SKYPAT_F(Operator_Add, test_add_bcast) {
  const float input_0[] = {
      0.5884017,   1.8677083,   -1.0027486,  1.4477159,   -1.2865968,
      -0.3334185,  0.8188775,   0.34736708,  0.3897475,   0.28745186,
      0.76828295,  0.4452364,   -0.17229503, -0.51588476, -0.015616473,
      -0.14284796, 1.5677063,   -0.92227286, -0.6049732,  2.115807,
      0.35817966,  -1.3770299,  -0.8369169,  0.4795634,   -0.5235722,
      -0.35830873, 0.2979849,   0.1973046,   0.47573668,  0.5179886,
      -1.0620235,  0.6885789,   -0.908625,   -1.266426,   0.611184,
      -0.61962795, 0.6224058,   0.24793378,  2.2289226,   1.195475,
      0.74488276,  1.3991418,   1.2854217,   -0.597365,   1.218095,
      -1.4951769,  -1.6906773,  -1.5350397,  -0.31110507, -1.1596892,
      -0.5054703,  -1.4420011,  0.7495304,   -1.0623072,  1.5846101,
      0.31128114,  -0.48852098, 1.4549689,   0.11554887,  1.3197784};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[] = {-1.0869865, -0.09162511, -0.35625437, -0.35506558,
                           0.8695285};
  const int32_t input_1_ndim = 1;
  const int32_t input_1_dims[] = {5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {
      -0.49858487, 1.7760832,  -1.359003,    1.0926503,   -0.4170683,
      -1.420405,   0.7272524,  -0.008887291, 0.034681916, 1.1569803,
      -0.3187036,  0.3536113,  -0.52854943,  -0.87095034, 0.853912,
      -1.2298346,  1.4760813,  -1.2785273,   -0.9600388,  2.9853356,
      -0.72880685, -1.468655,  -1.1931713,   0.1244978,   0.34595627,
      -1.4452953,  0.20635979, -0.15894976,  0.12067109,  1.3875171,
      -2.1490102,  0.5969538,  -1.2648793,   -1.6214916,  1.4807124,
      -1.7066145,  0.53078073, -0.108320594, 1.873857,    2.0650034,
      -0.34210378, 1.3075167,  0.9291674,    -0.9524306,  2.0876234,
      -2.5821633,  -1.7823024, -1.891294,    -0.66617066, -0.29016072,
      -1.5924568,  -1.5336262, 0.393276,     -1.4173728,  2.4541385,
      -0.7757054,  -0.5801461, 1.0987146,    -0.2395167,  2.189307};
  ONNC_RUNTIME_add_float(nullptr, input_0, input_0_ndim, input_0_dims, input_1,
                         input_1_ndim, input_1_dims, output_0, output_0_ndim,
                         output_0_dims);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}
