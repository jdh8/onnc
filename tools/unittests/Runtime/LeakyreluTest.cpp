#if defined(__GNUC__) || defined(_MSC_VER)
#define restrict __restrict
#else
#define restrict
#endif

extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}

#undef restrict

#include "relative-error.hpp"
#include <skypat/skypat.h>
SKYPAT_F(Operator_LeakyRelu, test_leakyrelu_example) {
  const float input_0[] = {-1.0, 0.0, 1.0};
  const int32_t input_0_ndim = 1;
  const int32_t input_0_dims[] = {3};
  float output_0[3];
  const int32_t output_0_ndim = 1;
  const int32_t output_0_dims[] = {3};
  const float answer_0[] = {-0.1, 0.0, 1.0};
  const float alpha = 0.10000000149011612;
  ONNC_RUNTIME_leakyrelu_float(nullptr, input_0, input_0_ndim, input_0_dims,
                               output_0, output_0_ndim, output_0_dims, alpha);
  ASSERT_TRUE(relative_error(output_0, answer_0, 3) < 1e-5f);
}

SKYPAT_F(Operator_LeakyRelu, test_leakyrelu) {
  const float input_0[] = {
      -1.0312183,  -2.1294882,  -1.3610783,  -0.40825382, -0.68376243,
      0.6504861,   -0.29267675, 0.04901166,  -0.63393384, -0.15795775,
      0.5264823,   -0.36558822, 0.59846395,  -0.91858727, -1.565227,
      -0.6516073,  0.22926646,  1.416827,    0.35032144,  0.0104922885,
      -0.71517104, -0.41441643, 0.7950327,   0.69558823,  0.49053064,
      0.88327575,  -0.48571867, 0.45372704,  -1.0894775,  0.5450922,
      -1.0717868,  -1.0108994,  0.24620868,  -1.6928053,  -1.6388402,
      0.21809015,  -0.6625998,  -0.6604972,  -0.9445863,  0.035316195,
      0.48203638,  0.056196563, -0.27432355, -0.3299394,  -0.40460408,
      -0.32377204, -0.39013988, 0.49012154,  -2.3816123,  1.7346739,
      -0.63703656, 1.7172387,   -0.6009088,  -0.55477566, -0.7400126,
      -0.08402379, -2.094921,   0.04469134,  0.6743654,   -1.3831066};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {
      -0.10312183,  -0.21294883,  -0.13610783,  -0.040825382, -0.06837624,
      0.6504861,    -0.029267674, 0.04901166,   -0.063393384, -0.015795775,
      0.5264823,    -0.03655882,  0.59846395,   -0.09185873,  -0.1565227,
      -0.06516073,  0.22926646,   1.416827,     0.35032144,   0.0104922885,
      -0.0715171,   -0.041441645, 0.7950327,    0.69558823,   0.49053064,
      0.88327575,   -0.048571866, 0.45372704,   -0.108947754, 0.5450922,
      -0.10717868,  -0.10108995,  0.24620868,   -0.16928053,  -0.16388403,
      0.21809015,   -0.06625998,  -0.06604972,  -0.09445863,  0.035316195,
      0.48203638,   0.056196563,  -0.027432356, -0.03299394,  -0.040460408,
      -0.032377206, -0.03901399,  0.49012154,   -0.23816124,  1.7346739,
      -0.063703656, 1.7172387,    -0.06009088,  -0.055477567, -0.07400126,
      -0.008402379, -0.20949212,  0.04469134,   0.6743654,    -0.13831066};
  const float alpha = 0.10000000149011612;
  ONNC_RUNTIME_leakyrelu_float(nullptr, input_0, input_0_ndim, input_0_dims,
                               output_0, output_0_ndim, output_0_dims, alpha);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}

SKYPAT_F(Operator_LeakyRelu, test_leakyrelu_default) {
  const float input_0[] = {
      -0.7624771,  -0.14340052, -1.025103,   2.333539,     0.23169303,
      -0.32269636, -0.6393762,  0.4580164,   1.1615163,    -0.374893,
      -0.32610556, 1.2456783,   0.65649784,  0.0018354026, 0.50054103,
      0.2636093,   1.2274216,   -0.88241637, -0.72977096,  -0.77465,
      -0.5937088,  -1.2166276,  0.57300955,  -0.109376855, 0.15758185,
      -0.72156113, -0.28153762, -0.29428807, -0.48749888,  0.5400397,
      0.20193633,  -0.13559414, 0.49738482,  -0.54138935,  0.171145,
      -0.7039771,  0.957552,    -1.1009713,  -0.80919087,  -1.7952237,
      1.2594755,   -1.5515556,  1.0796183,   0.13793397,   -1.0487077,
      -0.66187036, 0.638746,    -0.55613595, -0.07285212,  1.2851777,
      0.20993657,  0.73352027,  0.1792335,   0.10083997,   0.02772343,
      -1.1528128,  2.1507187,   1.9258934,   0.81047475,   -0.3117491};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {
      -0.007624771,  -0.0014340052, -0.010251029,  2.333539,      0.23169303,
      -0.0032269636, -0.0063937623, 0.4580164,     1.1615163,     -0.00374893,
      -0.0032610556, 1.2456783,     0.65649784,    0.0018354026,  0.50054103,
      0.2636093,     1.2274216,     -0.008824163,  -0.0072977096, -0.0077464995,
      -0.005937088,  -0.012166276,  0.57300955,    -0.0010937685, 0.15758185,
      -0.007215611,  -0.0028153763, -0.0029428806, -0.0048749885, 0.5400397,
      0.20193633,    -0.0013559414, 0.49738482,    -0.005413893,  0.171145,
      -0.007039771,  0.957552,      -0.011009713,  -0.008091909,  -0.017952237,
      1.2594755,     -0.015515556,  1.0796183,     0.13793397,    -0.010487077,
      -0.0066187032, 0.638746,      -0.005561359,  -0.0007285212, 1.2851777,
      0.20993657,    0.73352027,    0.1792335,     0.10083997,    0.02772343,
      -0.011528128,  2.1507187,     1.9258934,     0.81047475,    -0.003117491};
  const float alpha = 0.01;
  ONNC_RUNTIME_leakyrelu_float(nullptr, input_0, input_0_ndim, input_0_dims,
                               output_0, output_0_ndim, output_0_dims, alpha);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}
