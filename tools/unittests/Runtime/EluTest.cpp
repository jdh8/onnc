#if defined(__GNUC__) || defined(_MSC_VER)
#define restrict __restrict
#else
#define restrict
#endif

extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}

#undef restrict

#include "relative-error.hpp"
#include <skypat/skypat.h>
SKYPAT_F(Operator_Elu, test_elu_example) {
  const float input_0[] = {-1.0, 0.0, 1.0};
  const int32_t input_0_ndim = 1;
  const int32_t input_0_dims[] = {3};
  float output_0[3];
  const int32_t output_0_ndim = 1;
  const int32_t output_0_dims[] = {3};
  const float answer_0[] = {-1.2642411, 0.0, 1.0};
  const float alpha = 2.0;
  ONNC_RUNTIME_elu_float(nullptr, input_0, input_0_ndim, input_0_dims, output_0,
                         output_0_ndim, output_0_dims, alpha);
  ASSERT_TRUE(relative_error(output_0, answer_0, 3) < 1e-5f);
}

SKYPAT_F(Operator_Elu, test_elu) {
  const float input_0[] = {
      -0.41759923, -0.487758,    0.66588825,  -0.6489922,  1.4876176,
      0.24620284,  -1.8495839,   1.2744907,   1.5877377,   -0.9024329,
      -0.43641785, 0.76631546,   0.774112,    -1.2012454,  0.2690851,
      -0.84971875, 0.48755378,   -0.59773636, -0.61571074, -1.1343089,
      1.698465,    -0.37803596,  -0.657967,   -0.20465638, -0.9507377,
      -0.10084462, 1.8456287,    -0.34533355, 0.36305666,  -0.76690143,
      0.98157734,  -0.5792303,   0.5260933,   -1.8561316,  0.5359248,
      1.2791404,   0.2913915,    0.3989458,   0.24129415,  -0.064693436,
      -0.22884259, 0.78407043,   -0.47251514, -0.38334954, 0.2294231,
      0.9597215,   -0.007766807, -1.5550871,  -0.39857998, -1.8825282,
      -0.60615957, 0.8040125,    -0.9710886,  0.62180257,  1.0042608,
      -0.78745776, -1.1028453,   3.1181176,   -0.7109433,  1.6335709};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {
      -0.6827477,  -0.7719971,   0.66588825,  -0.9548557,  1.4876176,
      0.24620284,  -1.6853948,   1.2744907,   1.5877377,   -1.1888366,
      -0.70730484, 0.76631546,   0.774112,    -1.3983613,  0.2690851,
      -1.1449296,  0.48755378,   -0.89988923, -0.9194864,  -1.3567114,
      1.698465,    -0.62958825,  -0.9641937,  -0.37014544, -1.2270883,
      -0.19185305, 1.8456287,    -0.5840317,  0.36305666,  -1.0711,
      0.98157734,  -0.879341,    0.5260933,   -1.687448,   0.5359248,
      1.2791404,   0.2913915,    0.3989458,   0.24129415,  -0.1252904,
      -0.40909255, 0.78407043,   -0.75313544, -0.6368507,  0.2294231,
      0.9597215,   -0.015473485, -1.577658,   -0.65745485, -1.6955904,
      -0.90911686, 0.8040125,    -1.2426589,  0.62180257,  1.0042608,
      -1.0899999,  -1.3361495,   3.1181176,   -1.0176387,  1.6335709};
  const float alpha = 2.0;
  ONNC_RUNTIME_elu_float(nullptr, input_0, input_0_ndim, input_0_dims, output_0,
                         output_0_ndim, output_0_dims, alpha);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}

SKYPAT_F(Operator_Elu, test_elu_default) {
  const float input_0[] = {
      -2.5480433,  0.059604205, 0.19294141,  -1.4679319,  1.9761423,
      -0.41235983, 0.3426585,   0.07504605,  -0.8184504,  1.0681622,
      2.2666407,   2.0016904,   0.6809392,   0.016142897, 1.1871934,
      -0.9324075,  -0.57894033, -0.78241986, -0.61834806, -1.6479585,
      -0.74758536, 1.0571907,   -0.10735985, 1.4285835,   0.11730058,
      -0.39228004, 2.921629,    -0.41224998, 0.020241175, -0.98948276,
      1.1021271,   0.96545494,  -1.8723489,  1.1410835,   -1.355883,
      -0.74547297, -0.2013499,  1.2548976,   -0.25102314, -1.8095695,
      0.28468013,  0.43670312,  0.40448248,  1.6765432,   -0.24181539,
      -0.33435962, -0.66554844, -0.93841356, 0.3250445,   0.5735438,
      -1.2326813,  -1.0347445,  -0.7859412,  -0.47651258, -0.71937937,
      -1.6088974,  -0.64805764, 1.3162264,   0.18363708,  -1.0089421};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {
      -0.9217654,  0.059604205, 0.19294141,  -0.7695985,  1.9761423,
      -0.337914,   0.3426585,   0.07504605,  -0.55888534, 1.0681622,
      2.2666407,   2.0016904,   0.6809392,   0.016142897, 1.1871934,
      -0.606395,   -0.43950802, -0.54270196, -0.4611662,  -0.80755764,
      -0.52649146, 1.0571907,   -0.10179758, 1.4285835,   0.11730058,
      -0.32448506, 2.921629,    -0.33784127, 0.020241175, -0.62823105,
      1.1021271,   0.96545494,  -0.8462379,  1.1410835,   -0.74228036,
      -0.52549016, -0.1823737,  1.2548976,   -0.22199565, -0.8362754,
      0.28468013,  0.43670312,  0.40448248,  1.6765432,   -0.21479887,
      -0.28420365, -0.48600847, -0.60875195, 0.3250445,   0.5735438,
      -0.70849013, -0.6446829,  -0.5443094,  -0.3790549,  -0.51294553,
      -0.7998919,  -0.47693926, 1.3162264,   0.18363708,  -0.6353955};
  const float alpha = 1;
  ONNC_RUNTIME_elu_float(nullptr, input_0, input_0_ndim, input_0_dims, output_0,
                         output_0_ndim, output_0_dims, alpha);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}
