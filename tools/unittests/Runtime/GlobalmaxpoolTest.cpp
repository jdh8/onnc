#include <cmath>
#include <cstdlib>
#include <ctime>
#include <skypat/skypat.h>
#include <vector>

#define restrict
extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}
SKYPAT_F(Operator_GlobalMaxPool, test_globalmaxpool) {
  const float input_0[1][3][5][5] = {
      {{{1.0656583309173584, 1.650331735610962, -1.493259310722351,
         0.31181806325912476, 0.04425625130534172},
        {0.1847708821296692, 1.309648036956787, -0.4030238687992096,
         -0.9326739311218262, -1.4179551601409912},
        {0.19097959995269775, 0.21378637850284576, -1.1590243577957153,
         -0.8717353343963623, -1.0508105754852295},
        {0.8543695211410522, -0.023336956277489662, 1.548444390296936,
         1.0756194591522217, -0.349982351064682},
        {-0.044417303055524826, -0.4745403826236725, -0.7683400511741638,
         0.5417189002037048, -0.05823040008544922}},
       {{-2.0165822505950928, -0.40817663073539734, -0.10879747569561005,
         1.3038737773895264, -0.30706217885017395},
        {0.43241801857948303, -0.5155674815177917, 0.9618390202522278,
         -0.9465057849884033, -0.06527978181838989},
        {-1.2329447269439697, -0.5018342137336731, 1.3046475648880005,
         1.4996044635772705, -1.7209171056747437},
        {3.4191837310791016, -1.1178449392318726, 1.0651302337646484,
         0.0981462374329567, 0.9162837862968445},
        {0.03161289170384407, -0.10942119359970093, -1.1290099620819092,
         -0.9924253225326538, -0.6864880919456482}},
       {{-1.033506989479065, 0.3758344352245331, -0.47997984290122986,
         -0.3855587840080261, 0.06393512338399887},
        {0.9919195771217346, -0.2625868618488312, -0.7638653516769409,
         0.3376980423927307, -0.22790391743183136},
        {-2.0651819705963135, 0.34843000769615173, -0.17321905493736267,
         -0.7008690237998962, 0.4360028803348541},
        {-1.2100080251693726, 0.37151890993118286, -0.788147509098053,
         0.570144534111023, -0.943428635597229},
        {-0.12375368177890778, -2.1930782794952393, -0.36455458402633667,
         -0.14405374228954315, -0.6259161829948425}}}};
  const int32_t input_0_ndim = 4;
  const int32_t input_0_dims[] = {1, 3, 5, 5};
  float output_0[1][3][1][1];
  const int32_t output_0_ndim = 4;
  const int32_t output_0_dims[] = {1, 3, 1, 1};
  const float answer_0[1][3][1][1] = {
      {{{1.650331735610962}}, {{3.4191837310791016}}, {{0.9919195771217346}}}};
  ONNC_RUNTIME_globalmaxpool_float(NULL, (float *)input_0, input_0_ndim,
                                   input_0_dims, (float *)output_0,
                                   output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 1 * 3 * 1 * 1; ++i) {
    if (abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}

SKYPAT_F(Operator_GlobalMaxPool, test_globalmaxpool_precomputed) {
  const float input_0[1][1][3][3] = {
      {{{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}, {7.0, 8.0, 9.0}}}};
  const int32_t input_0_ndim = 4;
  const int32_t input_0_dims[] = {1, 1, 3, 3};
  float output_0[1][1][1][1];
  const int32_t output_0_ndim = 4;
  const int32_t output_0_dims[] = {1, 1, 1, 1};
  const float answer_0[1][1][1][1] = {{{{9.0}}}};
  ONNC_RUNTIME_globalmaxpool_float(NULL, (float *)input_0, input_0_ndim,
                                   input_0_dims, (float *)output_0,
                                   output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 1 * 1 * 1 * 1; ++i) {
    if (abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}
