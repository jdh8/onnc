#if defined(__GNUC__) || defined(_MSC_VER)
#  define restrict __restrict
#else
#  define restrict
#endif

extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}

#undef restrict

#include "norm.hpp"
#include <skypat/skypat.h>
SKYPAT_F(Operator_Atan, test_atan_example)
{
  const float   input_0[]      = {-1.0, 0.0, 1.0};
  const int32_t input_0_ndim   = 1;
  const int32_t input_0_dims[] = {3};
  float         output_0[3];
  const int32_t output_0_ndim   = 1;
  const int32_t output_0_dims[] = {3};
  const float   answer_0[]      = {-0.7853982, 0.0, 0.7853982};
  using dragonite::norm;

  ONNC_RUNTIME_atan_float(nullptr, input_0, input_0_ndim, input_0_dims, output_0, output_0_ndim, output_0_dims);
  ASSERT_TRUE(norm(answer_0, output_0, 3) <= 1e-5 * norm(answer_0, 3));
}

SKYPAT_F(Operator_Atan, test_atan)
{
  const float input_0[] = {
    0.1630113,   1.9149734,    -0.5659108, 0.88569015,  0.24748155, 0.6301788,    -1.4258925,  -1.9098842, 1.3036593,
    -1.1955405,  0.9199236,    -1.2908549, -1.3232993,  -0.8799306, -1.3866044,   0.37358695,  -1.2915367, -0.73159266,
    -0.9062961,  0.0023147815, 0.5194337,  1.3886043,   0.62952703, 0.62677413,   2.1610725,   -0.1885247, -0.7308445,
    -0.34294495, 1.1177154,    0.86792934, -0.34851512, 1.9188578,  -0.094362475, -0.9409082,  0.5844484,  0.33809796,
    1.3188293,   -1.4470481,   -0.3623305, -1.2291797,  0.26677042, -0.03301706,  -0.96175987, -2.8428264, -0.32974282,
    -0.30425844, -1.5648484,   0.42804843, -0.24530365, 0.22042672, -1.9254675,   0.41965267,  0.3213604,  -0.9926522,
    -1.2904185,  -0.19246069,  1.2481191,  0.718882,    -1.0952605, 0.17356475};
  const int32_t input_0_ndim   = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float         output_0[60];
  const int32_t output_0_ndim   = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float   answer_0[] = {0.16159001,  1.0895464,  -0.5149767,  0.7248526,   0.24260697,  0.56231475,   -0.9591883,
                            -1.0884538,  0.9164586,  -0.8742264,  0.7437142,   -0.91168594, -0.9236655,   -0.72161573,
                            -0.94599247, 0.35753125, -0.9119416,  -0.63161594, -0.7362827,  0.0023147773, 0.4790734,
                            0.9466761,   0.5618481,  0.55987406,  1.1374041,   -0.18633766, -0.63112843,  -0.3303759,
                            0.840927,    0.7148113,  -0.33535138, 1.0903774,   -0.09408388, -0.75496215,  0.528906,
                            0.32603258,  0.9220372,  -0.9660942,  -0.34761715, -0.88784724, 0.26069924,   -0.033005074,
                            -0.7659079,  -1.2325522, -0.31851563, -0.29535902, -1.0021648,  0.40444985,   -0.2405537,
                            0.21695729,  -1.0917853, 0.3973327,   0.3109365,   -0.78171074, -0.91152227,  -0.19013582,
                            0.8953207,   0.62328637, -0.83083165, 0.17185272};
  using dragonite::norm;

  ONNC_RUNTIME_atan_float(nullptr, input_0, input_0_ndim, input_0_dims, output_0, output_0_ndim, output_0_dims);
  ASSERT_TRUE(norm(answer_0, output_0, 60) <= 1e-5 * norm(answer_0, 60));
}
