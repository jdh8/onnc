#if defined(__GNUC__) || defined(_MSC_VER)
#  define restrict __restrict
#else
#  define restrict
#endif

extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}

#undef restrict

#include "norm.hpp"
#include <skypat/skypat.h>
SKYPAT_F(Operator_LpNormalization, l2norm)
{
  const float input_0[] = {
    1.7128587,   -0.6077898,  2.7942538,   -2.1477456,  1.248414,     -0.3349573,   0.20390873,   0.05974976,
    0.42690802,  -1.3682615,  2.4440258,   2.21884,     -0.74778736,  1.5648642,    -0.31713897,  -0.47977588,
    -0.29539245, 1.4696126,   -1.037023,   -0.66643196, 0.85834014,   -0.34979102,  0.97645706,   2.0492868,
    -1.5268809,  -0.09601593, -0.14900045, 1.3795075,   -1.3243805,   -0.040875442, 0.0064647123, -0.053949513,
    1.4718474,   0.5952617,   1.0031747,   -1.0082147,  1.4240683,    -0.009663574, 1.4564911,    -1.3183815,
    0.79501987,  0.07112974,  -1.7225906,  0.21212624,  0.3383225,    0.8785556,    0.657527,     0.78818375,
    -0.6517387,  -1.5221198,  0.053270794, -1.8270944,  0.0034364883, 0.17998631,   0.71214545,   1.374524,
    0.04399768,  -0.7864752,  0.7195286,   1.3240473,   0.5447849,    -0.083465025, -3.737259,    -1.8799384,
    0.27604002,  0.63437694,  -0.9917187,  0.24891095,  2.273596,     0.23927695,   -1.4308621,   0.9933036,
    0.2877554,   0.5339414,   0.7707637,   -0.74928826, 0.5739367,    1.055777,     1.0416852,    0.4264678,
    -0.23526448, -0.14171705, -0.93185043, -1.619007,   1.0749491,    0.23182163,   -0.27539745,  -1.3139352,
    2.1493113,   0.9645767,   -2.1915588,  0.80192876,  1.3454778,    -0.030468008, -0.07287238,  -0.5222917,
    -0.22841686, -0.28051317, -0.08347107, -0.09586085, 0.5737229,    -0.59139115,  1.6058818,    0.18581149,
    1.2969097,   -1.2487464,  -0.21814078, -1.9093903,  1.5747944,    -0.56444585,  1.3909739,    -0.4157462,
    -1.2763865,  0.6124409,   -2.196895,   0.014582182, 1.5838492,    -1.4359379,   -0.19672914,  0.15198983};
  const int32_t input_0_ndim   = 5;
  const int32_t input_0_dims[] = {1, 2, 3, 4, 5};
  float         output_0[120];
  const int32_t output_0_ndim   = 5;
  const int32_t output_0_dims[] = {1, 2, 3, 4, 5};
  const float   answer_0[]      = {
    0.41202,     -0.14620094,  0.6721444,   -0.51663,     0.30030003,   -0.22522826,  0.13711004,   0.04017627,
    0.28705674,  -0.92003113,  0.653075,    0.5929024,    -0.19981836,  0.41815174,   -0.0847436,   -0.23998542,
    -0.14775625, 0.7351049,    -0.5187222,  -0.3333514,   0.29715633,   -0.12109723,  0.33804825,   0.7094606,
    -0.5286043,  -0.04998311,  -0.07756532, 0.71813166,   -0.6894341,   -0.021278571, 0.0034408274, -0.028714497,
    0.7833872,   0.31682658,   0.5339373,   -0.38370803,  0.5419743,    -0.003677779, 0.5543138,    -0.50175184,
    0.40978804,  0.036663383,  -0.8878986,  0.109339155,  0.17438623,   0.41110379,   0.30767757,   0.36881596,
    -0.30496904, -0.7122477,   0.027041813, -0.9274866,   0.0017444621, 0.09136632,   0.36150587,   0.62865204,
    0.02012277,  -0.35970214,  0.32908347,  0.605566,     0.12883279,   -0.019738123, -0.88380104,  -0.4445749,
    0.065278985, 0.24555096,   -0.38386872, 0.09634701,   0.8800504,    0.09261794,   -0.7157898,   0.49690086,
    0.14394985,  0.26710457,   0.38557512,  -0.41420004,  0.3172672,    0.5836243,    0.5758345,    0.2357477,
    -0.10828377, -0.065227255, -0.42889723, -0.74517065,  0.4947604,    0.085185036,  -0.101197384, -0.48281783,
    0.78978467,  0.35444278,   -0.81321985, 0.297571,     0.4992653,    -0.011305737, -0.02704069,  -0.8060986,
    -0.35253575, -0.43294054,  -0.12882821, -0.14795044,  0.25723973,   -0.26516163,  0.72002804,   0.08331216,
    0.58149445,  -0.4400897,   -0.07687831, -0.6729173,   0.55499727,   -0.19892494,  0.46525687,   -0.13905996,
    -0.42692932, 0.20485094,   -0.7348236,  0.0067750774, 0.7358776,    -0.667156,    -0.09140299,  0.07061651};
  const int32_t axis = -1;
  const int32_t p    = 2;
  using dragonite::norm;

  ONNC_RUNTIME_lpnormalization_float(nullptr, input_0, input_0_ndim, input_0_dims, output_0, output_0_ndim,
                                     output_0_dims, axis, p);
  ASSERT_TRUE(norm(answer_0, output_0, 120) <= 1e-5 * norm(answer_0, 120));
}

SKYPAT_F(Operator_LpNormalization, l1norm)
{
  const float input_0[] = {
    1.4008243,   -1.2661088,   -1.5112059,   -2.1029813,  -1.3685454,  -0.046594158, -0.8684445,  0.9507899,
    0.16277975,  -0.812612,    -1.0220029,   -0.9317798,  -0.38367006, 0.8952125,    0.73492587,  0.62050205,
    0.6756075,   1.3613403,    0.55811816,   1.1931556,   -0.82838976, 1.1867199,    -0.94499815, 0.6494175,
    -0.6778055,  0.8528639,    0.74074113,   0.5171009,   1.1198546,   0.09952001,   0.43764964,  -1.5091047,
    0.20628917,  -0.014862425, 0.0048506516, -2.07091,    0.44413033,  0.47977075,   1.9297106,   -1.1474954,
    -0.8451131,  -1.5434536,   -0.8233025,   0.044669025, -1.2576598,  0.9194213,    0.99295235,  0.2933279,
    0.85797316,  -2.001638,    -0.8815417,   0.78872144,  0.03725723,  -1.448805,    0.41572654,  0.6044189,
    0.6314732,   -1.7320125,   0.013894035,  0.98486555,  0.14420429,  -1.9406441,   1.0786855,   1.3789338,
    -0.22276904, -0.029958831, 1.2474663,    -0.2502509,  -0.39125067, 0.49539232,   -1.7959012,  -0.107783996,
    -1.0217612,  0.050405674,  -1.1828221,   2.098088,    2.0459642,   -1.2919204,   -0.8327114,  2.352193,
    -1.6237102,  -0.54204285,  0.61321926,   -0.13779628, -0.67040896, -0.47939515,  1.1953171,   -2.1507835,
    0.24865168,  -2.4163086,   -0.96217144,  -3.0048096,  1.5456885,   -0.8160311,   1.6871003,   1.1667393,
    -0.44844857, -0.8380881,   -2.2142706,   0.017708642, -0.29660693, -0.27012804,  -0.37982252, 1.5327965,
    -0.36189193, -0.74837697,  0.027465891,  0.010592925, 1.0751314,   0.7269339,    1.0218703,   -1.3417284,
    0.24298042,  0.26474035,   0.2665136,    1.3910191,   -0.948805,   0.113294855,  -0.43607318, -2.3650422};
  const int32_t input_0_ndim   = 5;
  const int32_t input_0_dims[] = {1, 2, 3, 4, 5};
  float         output_0[120];
  const int32_t output_0_ndim   = 5;
  const int32_t output_0_dims[] = {1, 2, 3, 4, 5};
  const float   answer_0[]      = {
    0.4556523,   -0.31682166,  -0.46080285,  -0.7518521,   -0.4142073,  -0.025616959, -0.33374268, 0.53984773,
    0.07604372,  -0.2788868,   -0.43653062,  -0.2885119,   -0.61170274, 0.37950745,   0.63602245,  0.18826878,
    0.38579446,  0.38099447,   0.22309352,   0.35878804,   -0.269454,   0.29695597,   -0.28815255, 0.23217796,
    -0.20514627, 0.46889526,   0.28466636,   0.29360402,   0.52314806,  0.034155067,  0.18693437,  -0.46727207,
    0.32889625,  -0.006300628, 0.00419787,   -0.62834233,  0.25361326,  0.13427208,   0.7713527,   -0.3450578,
    -0.27489367, -0.3862224,   -0.25104463,  0.015969947,  -0.38064638, 0.5054878,    0.38159096,  0.16654825,
    0.40080827,  -0.68695813,  -0.3765351,   0.24421598,   0.05940091,  -0.61419195,  0.35977972,  0.18338893,
    0.36059228,  -0.48473346,  0.0055537866, 0.29615414,   0.069848776, -0.70496714,  0.52066964,  0.4521796,
    -0.17749532, -0.023819745, 0.5049962,    -0.10376848,  -0.22813001, 0.13614786,   -0.4751133,  -0.024197621,
    -0.36356044, 0.04456037,   -0.377123,    0.45063514,   0.5942012,   -0.5759009,   -0.239075,   0.49677318,
    -0.78648263, -0.19690493,  0.2959942,    -0.04518612,  -0.5341606,  -0.38115874,  0.48388526,  -0.8918391,
    0.14498354,  -0.66407007,  -0.25454655,  -0.67458296,  0.5499829,   -0.7213999,   0.5379036,   0.2505966,
    -0.13024113, -0.37359554,  -0.6357266,   0.0037399898, -0.14366862, -0.09812793,  -0.18333615, 0.5026342,
    -0.28834403, -0.5950215,   0.011118672,  0.004392439,  0.6268864,   0.19978204,   0.2703401,   -0.30121946,
    0.08645667,  0.23403968,   0.08497339,   0.29876825,   -0.27555764, 0.05050358,   -0.12519847, -0.49948686};
  const int32_t axis = 2;
  const int32_t p    = 1;
  using dragonite::norm;

  ONNC_RUNTIME_lpnormalization_float(nullptr, input_0, input_0_ndim, input_0_dims, output_0, output_0_ndim,
                                     output_0_dims, axis, p);
  ASSERT_TRUE(norm(answer_0, output_0, 120) <= 1e-5 * norm(answer_0, 120));
}
