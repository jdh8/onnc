#if defined(__GNUC__) || defined(_MSC_VER)
#  define restrict __restrict
#else
#  define restrict
#endif

extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}

#undef restrict

#include "norm.hpp"
#include <skypat/skypat.h>
SKYPAT_F(Operator_Unsqueeze, test_unsqueeze)
{
  const float   input_0[] = {-0.9569223,  1.9262218,   -0.9885484,  0.12714124,  0.74866956, 0.29593453,   -0.38250506,
                           -0.48311615, 1.3910712,   -2.3591561,  1.2372622,   0.7194977,  -0.7546181,   0.7723779,
                           1.2838398,   -1.8345748,  -2.312352,   -1.0516165,  -0.9047462, 0.5853988,    -0.23742464,
                           -0.7541834,  -1.1816064,  -0.21247295, 0.123390816, 1.0045302,  1.1963757,    1.0882326,
                           -1.0023533,  -1.1060542,  0.053691622, -0.02578249, 0.9838126,  1.1541992,    -2.2266095,
                           -0.64002717, -1.1192149,  0.44096556,  1.6360905,   0.773132,   0.7740595,    -0.598079,
                           0.42623854,  -0.28590032, 2.1666238,   -1.0595474,  0.46349692, 0.067444906,  -1.1824998,
                           -0.44190502, -0.12880813, -1.0797664,  -1.3405677,  1.8780632,  -0.059614792, 0.042815313,
                           0.6905625,   -1.048435,   0.27212757,  -1.5981315};
  const int32_t input_0_ndim   = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float         output_0[60];
  const int32_t output_0_ndim   = 4;
  const int32_t output_0_dims[] = {1, 3, 4, 5};
  const float   answer_0[] = {-0.9569223,  1.9262218,   -0.9885484,  0.12714124,  0.74866956, 0.29593453,   -0.38250506,
                            -0.48311615, 1.3910712,   -2.3591561,  1.2372622,   0.7194977,  -0.7546181,   0.7723779,
                            1.2838398,   -1.8345748,  -2.312352,   -1.0516165,  -0.9047462, 0.5853988,    -0.23742464,
                            -0.7541834,  -1.1816064,  -0.21247295, 0.123390816, 1.0045302,  1.1963757,    1.0882326,
                            -1.0023533,  -1.1060542,  0.053691622, -0.02578249, 0.9838126,  1.1541992,    -2.2266095,
                            -0.64002717, -1.1192149,  0.44096556,  1.6360905,   0.773132,   0.7740595,    -0.598079,
                            0.42623854,  -0.28590032, 2.1666238,   -1.0595474,  0.46349692, 0.067444906,  -1.1824998,
                            -0.44190502, -0.12880813, -1.0797664,  -1.3405677,  1.8780632,  -0.059614792, 0.042815313,
                            0.6905625,   -1.048435,   0.27212757,  -1.5981315};
  const int32_t axes[]     = {0};
  const int32_t number_of_axes = 1;
  using dragonite::norm;

  ONNC_RUNTIME_unsqueeze_float(nullptr, input_0, input_0_ndim, input_0_dims, output_0, output_0_ndim, output_0_dims,
                               const_cast<int32_t*>(axes), number_of_axes);
  ASSERT_TRUE(norm(answer_0, output_0, 60) <= 1e-5 * norm(answer_0, 60));
}
