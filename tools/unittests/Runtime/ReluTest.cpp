#include <cmath>
#include <cstdlib>
#include <ctime>
#include <skypat/skypat.h>
#include <vector>

#define restrict
extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}
SKYPAT_F(Operator_Relu, test_relu) {
  const float input_0[3][4][5] = {
      {{-0.040413618087768555, 1.3398699760437012, 0.761346161365509,
        0.11424091458320618, 1.198793649673462},
       {-0.25284749269485474, 0.9595226645469666, 0.503016471862793,
        -0.9834302663803101, -0.117510125041008},
       {-1.9323440790176392, -0.6816390156745911, -0.026110932230949402,
        -0.33252665400505066, -1.1427862644195557},
       {1.175645351409912, 1.4949960708618164, 0.5221832990646362,
        -2.0215516090393066, -0.8153753876686096}},
      {{0.6784024834632874, 1.2173165082931519, -1.4998042583465576,
        -0.4869042634963989, -0.005701093934476376},
       {0.11114529520273209, 0.3962787687778473, 0.057681579142808914,
        1.9345953464508057, -0.7595335245132446},
       {1.1867185831069946, -0.5155831575393677, -0.7561905384063721,
        1.5147002935409546, -0.4296552836894989},
       {0.26766377687454224, -0.7442487478256226, -0.2615905702114105,
        -0.2516151964664459, -0.721460223197937}},
      {{-0.7580716013908386, 0.14668402075767517, -1.1235703229904175,
        -0.4902454912662506, 0.5505087971687317},
       {-0.34881392121315, -0.026948649436235428, -0.1993037313222885,
        -1.9980987310409546, -1.102304458618164},
       {0.9951457381248474, 0.6022711396217346, -0.6351900100708008,
        0.14094555377960205, -0.22039812803268433},
       {0.1544727385044098, -2.332692861557007, 0.5595309138298035,
        -1.0988596677780151, 0.07551339268684387}}};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[3][4][5];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[3][4][5] = {
      {{0.0, 1.3398699760437012, 0.761346161365509, 0.11424091458320618,
        1.198793649673462},
       {0.0, 0.9595226645469666, 0.503016471862793, 0.0, 0.0},
       {0.0, 0.0, 0.0, 0.0, 0.0},
       {1.175645351409912, 1.4949960708618164, 0.5221832990646362, 0.0, 0.0}},
      {{0.6784024834632874, 1.2173165082931519, 0.0, 0.0, 0.0},
       {0.11114529520273209, 0.3962787687778473, 0.057681579142808914,
        1.9345953464508057, 0.0},
       {1.1867185831069946, 0.0, 0.0, 1.5147002935409546, 0.0},
       {0.26766377687454224, 0.0, 0.0, 0.0, 0.0}},
      {{0.0, 0.14668402075767517, 0.0, 0.0, 0.5505087971687317},
       {0.0, 0.0, 0.0, 0.0, 0.0},
       {0.9951457381248474, 0.6022711396217346, 0.0, 0.14094555377960205, 0.0},
       {0.1544727385044098, 0.0, 0.5595309138298035, 0.0,
        0.07551339268684387}}};
  ONNC_RUNTIME_relu_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                          (float *)output_0, output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3 * 4 * 5; ++i) {
    if (std::abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}
