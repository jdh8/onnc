#include <cmath>
#include <cstdlib>
#include <ctime>
#include <skypat/skypat.h>
#include <vector>

#define restrict
extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}
SKYPAT_F(Operator_Softplus, test_softplus_example) {
  const float input_0[3] = {-1.0, 0.0, 1.0};
  const int32_t input_0_ndim = 1;
  const int32_t input_0_dims[] = {3};
  float output_0[3];
  const int32_t output_0_ndim = 1;
  const int32_t output_0_dims[] = {3};
  const float answer_0[3] = {0.31326165795326233, 0.6931471824645996,
                             1.31326162815094};
  ONNC_RUNTIME_softplus_float(NULL, (float *)input_0, input_0_ndim,
                              input_0_dims, (float *)output_0, output_0_ndim,
                              output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3; ++i) {
    if (abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}

SKYPAT_F(Operator_Softplus, test_softplus) {
  const float input_0[3][4][5] = {
      {{1.3034499883651733, 1.078640341758728, 1.0562642812728882,
        1.2474724054336548, -1.0947266817092896},
       {-1.2159050703048706, -1.7444179058074951, -0.84836345911026,
        0.8008849024772644, -0.10959615558385849},
       {0.23248790204524994, 0.28566160798072815, 0.45505309104919434,
        1.018066644668579, 0.18359121680259705},
       {0.9878370761871338, 0.3337159752845764, -1.3457250595092773,
        -0.3793797194957733, -1.1814618110656738}},
      {{-1.0709160566329956, -0.5425159931182861, 0.9492594599723816,
        -2.22316575050354, -0.2813357710838318},
       {1.4398757219314575, 0.30180823802948, 0.07424238324165344,
        -0.512279748916626, -0.49056339263916016},
       {0.17104604840278625, 0.3036694824695587, 0.44020992517471313,
        -1.346886157989502, -1.980765461921692},
       {0.06559646129608154, 0.6851376891136169, 0.9343273639678955,
        -0.9436768293380737, -3.31680965423584}},
      {{1.8092610836029053, -0.8710706830024719, 0.35748955607414246,
        0.2707984447479248, 1.790696620941162},
       {1.409758448600769, 0.9186212420463562, -0.7166215777397156,
        -0.8816477656364441, 1.9194025993347168},
       {0.9819809794425964, -1.597219467163086, -0.670599102973938,
        -1.1393200159072876, 0.8381927013397217},
       {-1.1636841297149658, 0.38556376099586487, -0.8569071888923645,
        -0.21537457406520844, 1.1839065551757812}}};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[3][4][5];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[3][4][5] = {
      {{1.5437204837799072, 1.3713529109954834, 1.3547027111053467,
        1.499964952468872, 0.2886549234390259},
       {0.259623259305954, 0.16105249524116516, 0.3563553988933563,
        1.1717113256454468, 0.6398497819900513},
       {0.8161323070526123, 0.8461438417434692, 0.9463376402854919,
        1.326501488685608, 0.7891501784324646},
       {1.304384469985962, 0.8738618493080139, 0.23139020800590515,
        0.5213415026664734, 0.2676042914390564}},
      {{0.29467833042144775, 0.4582371413707733, 1.2764225006103516,
        0.1027965173125267, 0.5623405575752258},
       {1.6525301933288574, 0.8553943634033203, 0.7309572100639343,
        0.4694586396217346, 0.47765013575553894},
       {0.7823228240013123, 0.8564648032188416, 0.9372822046279907,
        0.23115040361881256, 0.12924028933048248},
       {0.726483166217804, 1.0932797193527222, 1.2656793594360352,
        0.3287239074707031, 0.035626139491796494}},
      {{1.9609302282333374, 0.34960228204727173, 0.8877824544906616,
        0.8376850485801697, 1.9449992179870605},
       {1.6282529830932617, 1.2544281482696533, 0.3977013826370239,
        0.34649333357810974, 2.056286096572876},
       {1.3001207113265991, 0.1843683123588562, 0.4130377769470215,
        0.27765941619873047, 1.1976078748703003},
       {0.2718067467212677, 0.9043974876403809, 0.35380178689956665,
        0.5912469625473022, 1.4509373903274536}}};
  ONNC_RUNTIME_softplus_float(NULL, (float *)input_0, input_0_ndim,
                              input_0_dims, (float *)output_0, output_0_ndim,
                              output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3 * 4 * 5; ++i) {
    if (abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}
