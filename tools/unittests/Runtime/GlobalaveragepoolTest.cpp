#include <cmath>
#include <cstdlib>
#include <ctime>
#include <skypat/skypat.h>
#include <vector>

#define restrict
extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}
SKYPAT_F(Operator_GlobalAveragePool, test_globalaveragepool) {
  const float input_0[1][3][5][5] = {
      {{{-0.7503387331962585, -1.1510448455810547, 0.3034740090370178,
         -0.3468954265117645, 1.0718345642089844},
        {2.668449878692627, -0.4767223298549652, -0.38866934180259705,
         0.48249292373657227, -3.863558053970337},
        {0.6588166356086731, -1.461800217628479, -1.4075514078140259,
         0.2112281769514084, -0.4206663966178894},
        {-1.6294015645980835, 0.7718809247016907, 0.45168250799179077,
         -0.026196787133812904, -0.4866255819797516},
        {-0.6526802778244019, 0.5682859420776367, 0.9334399104118347,
         -0.5880400538444519, -0.8779717683792114}},
       {{-0.252462774515152, 2.108408212661743, -0.371069073677063,
         0.8485515117645264, 0.427800714969635},
        {0.4884505271911621, 0.43190717697143555, 0.16584575176239014,
         -1.3637051582336426, 1.6912904977798462},
        {0.5845990777015686, -0.4587387442588806, 0.437838077545166,
         0.15535777807235718, 0.46909523010253906},
        {0.8741410374641418, 0.43115943670272827, -0.8542736172676086,
         0.08157984912395477, 3.10453200340271},
        {-1.1236752271652222, 0.6692004799842834, 1.089741587638855,
         -0.5255563259124756, 0.2722744047641754}},
       {{-1.0530462265014648, -0.8787509799003601, 0.22810649871826172,
         -0.2838653326034546, -0.3095105290412903},
        {-0.4282580316066742, 1.7137738466262817, 0.4860796332359314,
         -0.38270747661590576, -0.890825092792511},
        {-0.5638362765312195, -1.734286904335022, 0.29974818229675293,
         -0.20393525063991547, -1.4340940713882446},
        {-0.8474959135055542, 0.23059631884098053, 0.426669716835022,
         -2.447805881500244, 1.1045112609863281},
        {-1.175424575805664, 0.9077152013778687, -0.7214264273643494,
         -1.198974609375, -0.7690564393997192}}}};
  const int32_t input_0_ndim = 4;
  const int32_t input_0_dims[] = {1, 3, 5, 5};
  float output_0[1][3][1][1];
  const int32_t output_0_ndim = 4;
  const int32_t output_0_dims[] = {1, 3, 1, 1};
  const float answer_0[1][3][1][1] = {{{{-0.2562630772590637}},
                                       {{0.37529170513153076}},
                                       {{-0.39704394340515137}}}};
  ONNC_RUNTIME_globalaveragepool_float(NULL, (float *)input_0, input_0_ndim,
                                       input_0_dims, (float *)output_0,
                                       output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 1 * 3 * 1 * 1; ++i) {
    if (abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}

SKYPAT_F(Operator_GlobalAveragePool, test_globalaveragepool_precomputed) {
  const float input_0[1][1][3][3] = {
      {{{1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}, {7.0, 8.0, 9.0}}}};
  const int32_t input_0_ndim = 4;
  const int32_t input_0_dims[] = {1, 1, 3, 3};
  float output_0[1][1][1][1];
  const int32_t output_0_ndim = 4;
  const int32_t output_0_dims[] = {1, 1, 1, 1};
  const float answer_0[1][1][1][1] = {{{{5.0}}}};
  ONNC_RUNTIME_globalaveragepool_float(NULL, (float *)input_0, input_0_ndim,
                                       input_0_dims, (float *)output_0,
                                       output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 1 * 1 * 1 * 1; ++i) {
    if (abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}
