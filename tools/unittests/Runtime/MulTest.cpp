#if defined(__GNUC__) || defined(_MSC_VER)
#define restrict __restrict
#else
#define restrict
#endif

extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}

#undef restrict

#include "relative-error.hpp"
#include <skypat/skypat.h>
SKYPAT_F(Operator_Mul, test_mul_example) {
  const float input_0[] = {1.0, 2.0, 3.0};
  const int32_t input_0_ndim = 1;
  const int32_t input_0_dims[] = {3};
  const float input_1[] = {4.0, 5.0, 6.0};
  const int32_t input_1_ndim = 1;
  const int32_t input_1_dims[] = {3};
  float output_0[3];
  const int32_t output_0_ndim = 1;
  const int32_t output_0_dims[] = {3};
  const float answer_0[] = {4.0, 10.0, 18.0};
  ONNC_RUNTIME_mul_float(nullptr, input_0, input_0_ndim, input_0_dims, input_1,
                         input_1_ndim, input_1_dims, output_0, output_0_ndim,
                         output_0_dims);
  ASSERT_TRUE(relative_error(output_0, answer_0, 3) < 1e-5f);
}

SKYPAT_F(Operator_Mul, test_mul) {
  const float input_0[] = {
      -1.2356818,  0.9890021,   1.542265,     0.22875889,  -1.307588,
      -0.506264,   2.4649744,   -0.01703027,  -0.12723084, -0.46852922,
      0.1751219,   0.28136215,  0.24560954,   -1.2231889,  -0.015100502,
      -1.5773833,  -0.57164353, 0.7899283,    -1.0508568,  1.5036229,
      0.45491698,  -1.1606065,  -0.06339243,  1.4164964,   0.6296805,
      0.21350789,  -0.80522037, -0.9941763,   -0.17534041, -1.5702877,
      1.7238158,   -0.16407609, 0.20820262,   0.14343943,  -0.6442209,
      -0.69512224, 1.577052,    0.054593783,  -0.30549935, 0.36708334,
      1.4873267,   -0.5466576,  0.7485632,    1.0927925,   -0.20919947,
      1.2522386,   -0.45702472, -0.096873954, 1.7673643,   -0.66687846,
      1.0389876,   -1.582429,   -0.06077305,  -0.40630916, -0.3126396,
      -0.09408399, -1.4505244,  -1.1385901,   0.61990684,  -0.19931889};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[] = {
      -0.46739253, -0.38569012, 3.056218,     0.30255032, 0.80817497,
      1.9478068,   -2.0273354,  0.4104199,    0.41054606, -0.8784125,
      -0.42916664, -2.6683655,  1.0274142,    0.21010892, -0.88283193,
      0.4462619,   -0.6893437,  -0.542896,    -0.2665485, -0.62152666,
      -0.5703784,  -1.578878,   -1.461307,    -1.3694016, 1.3333963,
      1.231054,    1.7778761,   0.8525385,    1.1563908,  -0.064423025,
      -1.368538,   -0.34429473, -0.64258736,  0.78713745, -1.9330978,
      -0.91551304, 0.42310527,  -0.65335965,  -0.7576668, -0.004956234,
      0.036640592, -2.4762075,  -2.3655179,   0.21757291, -0.74904364,
      -1.0401765,  0.055306364, -0.051626805, 0.17774673, -0.5799348,
      -0.5813435,  -0.37156653, -0.56366086,  -1.3908854, -1.1828102,
      -0.60753965, -0.84512985, -0.5157971,   -1.0827025, -2.1344943};
  const int32_t input_1_ndim = 3;
  const int32_t input_1_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {
      0.57754844,  -0.38144836,  4.713498,      0.06921107,  -1.0567598,
      -0.9861044,  -4.9973297,   -0.0069895624, -0.05223412, 0.4115619,
      -0.07515648, -0.75077707,  0.25234273,    -0.2570029,  0.013331206,
      -0.7039261,  0.39405885,   -0.4288489,    0.28010434,  -0.9345417,
      -0.25947484, 1.8324561,    0.0926358,     -1.9397523,  0.8396137,
      0.26283973,  -1.4315821,   -0.84757364,   -0.20276204, 0.10116269,
      -2.3591075,  0.056490533,  -0.13378838,   0.112906545, 1.245342,
      0.6363935,   0.66725904,   -0.035669375,  0.23146673,  -0.0018193509,
      0.05449653,  1.3536377,    -1.7707396,    0.23776205,  0.15669954,
      -1.3025492,  -0.025276376, 0.0050012926,  0.3141432,   0.38674602,
      -0.6040087,  0.5879777,    0.03425539,    0.56512946,  0.3697933,
      0.05715975,  1.2258815,    0.58728147,    -0.6711747,  0.42544502};
  ONNC_RUNTIME_mul_float(nullptr, input_0, input_0_ndim, input_0_dims, input_1,
                         input_1_ndim, input_1_dims, output_0, output_0_ndim,
                         output_0_dims);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}

SKYPAT_F(Operator_Mul, test_mul_bcast) {
  const float input_0[] = {
      -0.3631269,   -0.30242866,  0.98081475,   -0.5790656,   0.21030042,
      -0.016985955, -0.024184491, 0.40058398,   0.36894214,   0.03107169,
      0.86843675,   -0.7365724,   0.49158746,   -0.33969206,  1.2615898,
      -0.4435367,   0.72754765,   0.54154754,   0.66710293,   0.29800993,
      1.0255344,    1.4806373,    1.7772677,    1.3607655,    -1.1761394,
      -0.19145107,  -0.615878,    -0.23015097,  -0.3589601,   -1.0208099,
      -1.7966363,   1.0581996,    -1.141616,    -0.28288114,  -0.8535949,
      1.1218922,    -1.5916519,   -2.1012857,   -0.33421475,  -0.20911087,
      -0.9385684,   -1.2229009,   -0.085795216, -1.5782216,   0.60919374,
      1.417138,     0.6503833,    0.04677524,   2.0085974,    0.7847724,
      -1.0610373,   -1.6337247,   -0.403563,    -1.6526515,   -1.2809871,
      1.9550369,    1.811269,     -1.1898779,   -0.069369435, -1.015104};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[] = {1.073219, 1.1660196, -1.5244592, -0.6464534,
                           0.5832365};
  const int32_t input_1_ndim = 1;
  const int32_t input_1_dims[] = {5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {
      -0.38971466,  -0.35263774, -1.4952121,  0.37433892,  0.122654885,
      -0.018229648, -0.02819959, -0.61067396, -0.23850389, 0.018122144,
      0.93202275,   -0.8588578,  -0.749405,   0.21959507,  0.7358052,
      -0.476012,    0.8483348,   -0.8255671,  -0.43125096, 0.17381027,
      1.1006229,    1.7264521,   -2.7093723,  -0.87967145, -0.68596745,
      -0.20546892,  -0.71812576, 0.35085577,  0.23205097,  -0.59537363,
      -1.9281842,   1.2338815,   1.740347,    0.18286946,  -0.4978477,
      1.204036,     -1.8558973,  3.2033243,   0.21605425,  -0.121961094,
      -1.0072894,   -1.4259263,  0.1307913,   1.0202466,   0.35530403,
      1.5208993,    0.7583597,   -0.07130695, -1.2984645,  0.4577079,
      -1.1387253,   -1.9049549,  0.61521536,  1.0683622,   -0.7471185,
      2.0981827,    2.1119752,   1.8139203,   0.044844106, -0.5920457};
  ONNC_RUNTIME_mul_float(nullptr, input_0, input_0_ndim, input_0_dims, input_1,
                         input_1_ndim, input_1_dims, output_0, output_0_ndim,
                         output_0_dims);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}
