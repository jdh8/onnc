#if defined(__GNUC__) || defined(_MSC_VER)
#define restrict __restrict
#else
#define restrict
#endif

extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}

#undef restrict

#include "relative-error.hpp"
#include <skypat/skypat.h>
SKYPAT_F(Operator_Softmax, test_softmax_example) {
  const float input_0[] = {-1.0, 0.0, 1.0};
  const int32_t input_0_ndim = 2;
  const int32_t input_0_dims[] = {1, 3};
  float output_0[3];
  const int32_t output_0_ndim = 2;
  const int32_t output_0_dims[] = {1, 3};
  const float answer_0[] = {0.09003058, 0.24472848, 0.66524094};
  const int32_t axis = 1;
  ONNC_RUNTIME_softmax_float(nullptr, input_0, input_0_ndim, input_0_dims,
                             output_0, output_0_ndim, output_0_dims, axis);
  ASSERT_TRUE(relative_error(output_0, answer_0, 3) < 1e-5f);
}

SKYPAT_F(Operator_Softmax, test_softmax_large_number) {
  const float input_0[] = {0.0,     1.0,     2.0,     3.0,
                           10000.0, 10001.0, 10002.0, 10003.0};
  const int32_t input_0_ndim = 2;
  const int32_t input_0_dims[] = {2, 4};
  float output_0[8];
  const int32_t output_0_ndim = 2;
  const int32_t output_0_dims[] = {2, 4};
  const float answer_0[] = {0.032058604, 0.08714432, 0.23688284, 0.6439143,
                            0.032058604, 0.08714432, 0.23688284, 0.6439143};
  const int32_t axis = 1;
  ONNC_RUNTIME_softmax_float(nullptr, input_0, input_0_ndim, input_0_dims,
                             output_0, output_0_ndim, output_0_dims, axis);
  ASSERT_TRUE(relative_error(output_0, answer_0, 8) < 1e-5f);
}

SKYPAT_F(Operator_Softmax, test_softmax_axis_0) {
  const float input_0[] = {
      0.76478195,  0.5640015,  0.61392933,  0.7056366,  0.24107233,
      0.6252645,   0.25759596, 1.4764999,   0.4396305,  0.51341045,
      0.03690652,  1.2340646,  0.031093933, 0.65462106, 0.9864291,
      0.045557402, 1.2032821,  0.7458623,   0.2978456,  0.9822353,
      1.3218253,   0.16335683, 0.6249672,   0.7417124,  0.13622278,
      1.0594494,   0.08097394, 0.5245482,   1.8382659,  0.83607155,
      1.3591579,   0.5534932,  0.15473656,  0.87786126, 0.5545231,
      1.2758892,   0.8472756,  0.33949015,  0.88678396, 0.39700082,
      0.96295965,  0.0797269,  0.6448428,   0.40467185, 0.021282993,
      2.4381325,   0.16571054, 0.9223551,   0.8054891,  1.8176587,
      0.82657945,  1.5185177,  1.7634532,   2.1006796,  0.9573124,
      0.24787527,  1.1825719,  0.9785193,   0.5731644,  0.98444605};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {
      0.013979827,  0.011436786,  0.012022293,  0.013176963,  0.00828052,
      0.012159344,  0.008418482,  0.028483737,  0.010099278,  0.010872577,
      0.0067513324, 0.022351602,  0.0067122034, 0.012521592,  0.017448653,
      0.006809992,  0.021674046,  0.013717819,  0.0087642325, 0.017375631,
      0.024401844,  0.0076613654, 0.01215573,   0.013661009,  0.007456277,
      0.018770432,  0.0070554987, 0.0109943515, 0.04089874,   0.015012827,
      0.025330046,  0.011317234,  0.0075956057, 0.015653502,  0.011328895,
      0.023306275,  0.015181977,  0.009136923,  0.015793798,  0.009677796,
      0.017043913,  0.0070467065, 0.01239975,   0.009752321,  0.0066466723,
      0.07451243,   0.0076794187, 0.016365714,  0.014560646,  0.040064555,
      0.014870998,  0.029706063,  0.03795065,   0.053170998,  0.01694793,
      0.008337043,  0.021229789,  0.017311184,  0.011542061,  0.017414087};
  const int32_t axis = 0;
  ONNC_RUNTIME_softmax_float(nullptr, input_0, input_0_ndim, input_0_dims,
                             output_0, output_0_ndim, output_0_dims, axis);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}

SKYPAT_F(Operator_Softmax, test_softmax_axis_1) {
  const float input_0[] = {
      0.76478195,  0.5640015,  0.61392933,  0.7056366,  0.24107233,
      0.6252645,   0.25759596, 1.4764999,   0.4396305,  0.51341045,
      0.03690652,  1.2340646,  0.031093933, 0.65462106, 0.9864291,
      0.045557402, 1.2032821,  0.7458623,   0.2978456,  0.9822353,
      1.3218253,   0.16335683, 0.6249672,   0.7417124,  0.13622278,
      1.0594494,   0.08097394, 0.5245482,   1.8382659,  0.83607155,
      1.3591579,   0.5534932,  0.15473656,  0.87786126, 0.5545231,
      1.2758892,   0.8472756,  0.33949015,  0.88678396, 0.39700082,
      0.96295965,  0.0797269,  0.6448428,   0.40467185, 0.021282993,
      2.4381325,   0.16571054, 0.9223551,   0.8054891,  1.8176587,
      0.82657945,  1.5185177,  1.7634532,   2.1006796,  0.9573124,
      0.24787527,  1.1825719,  0.9785193,   0.5731644,  0.98444605};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {
      0.053143732, 0.043476462, 0.045702253, 0.050091676, 0.03147805,
      0.04622324,  0.032002505, 0.10827975,  0.038391985, 0.041331656,
      0.02566491,  0.084968686, 0.025516165, 0.047600314, 0.06633033,
      0.025887897, 0.08239299,  0.052147724, 0.03331687,  0.06605274,
      0.08069656,  0.02533603,  0.040198833, 0.04517677,  0.024657806,
      0.06207356,  0.023332441, 0.036358166, 0.13525158,  0.049647212,
      0.08376612,  0.037425935, 0.025118563, 0.05176592,  0.0374645,
      0.07707353,  0.05020659,  0.030215675, 0.052229878, 0.032004338,
      0.039221723, 0.016215993, 0.028534502, 0.022442196, 0.015295428,
      0.17146918,  0.017672,    0.037661042, 0.03350719,  0.092197195,
      0.034221377, 0.06836006,  0.087332636, 0.12235794,  0.039000846,
      0.019185336, 0.04885433,  0.03983677,  0.026560776, 0.040073574};
  const int32_t axis = 1;
  ONNC_RUNTIME_softmax_float(nullptr, input_0, input_0_ndim, input_0_dims,
                             output_0, output_0_ndim, output_0_dims, axis);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}

SKYPAT_F(Operator_Softmax, test_softmax_default_axis) {
  const float input_0[] = {
      0.76478195,  0.5640015,  0.61392933,  0.7056366,  0.24107233,
      0.6252645,   0.25759596, 1.4764999,   0.4396305,  0.51341045,
      0.03690652,  1.2340646,  0.031093933, 0.65462106, 0.9864291,
      0.045557402, 1.2032821,  0.7458623,   0.2978456,  0.9822353,
      1.3218253,   0.16335683, 0.6249672,   0.7417124,  0.13622278,
      1.0594494,   0.08097394, 0.5245482,   1.8382659,  0.83607155,
      1.3591579,   0.5534932,  0.15473656,  0.87786126, 0.5545231,
      1.2758892,   0.8472756,  0.33949015,  0.88678396, 0.39700082,
      0.96295965,  0.0797269,  0.6448428,   0.40467185, 0.021282993,
      2.4381325,   0.16571054, 0.9223551,   0.8054891,  1.8176587,
      0.82657945,  1.5185177,  1.7634532,   2.1006796,  0.9573124,
      0.24787527,  1.1825719,  0.9785193,   0.5731644,  0.98444605};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {
      0.053143732, 0.043476462, 0.045702253, 0.050091676, 0.03147805,
      0.04622324,  0.032002505, 0.10827975,  0.038391985, 0.041331656,
      0.02566491,  0.084968686, 0.025516165, 0.047600314, 0.06633033,
      0.025887897, 0.08239299,  0.052147724, 0.03331687,  0.06605274,
      0.08069656,  0.02533603,  0.040198833, 0.04517677,  0.024657806,
      0.06207356,  0.023332441, 0.036358166, 0.13525158,  0.049647212,
      0.08376612,  0.037425935, 0.025118563, 0.05176592,  0.0374645,
      0.07707353,  0.05020659,  0.030215675, 0.052229878, 0.032004338,
      0.039221723, 0.016215993, 0.028534502, 0.022442196, 0.015295428,
      0.17146918,  0.017672,    0.037661042, 0.03350719,  0.092197195,
      0.034221377, 0.06836006,  0.087332636, 0.12235794,  0.039000846,
      0.019185336, 0.04885433,  0.03983677,  0.026560776, 0.040073574};
  const int32_t axis = 1;
  ONNC_RUNTIME_softmax_float(nullptr, input_0, input_0_ndim, input_0_dims,
                             output_0, output_0_ndim, output_0_dims, axis);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}

SKYPAT_F(Operator_Softmax, test_softmax_axis_2) {
  const float input_0[] = {
      0.76478195,  0.5640015,  0.61392933,  0.7056366,  0.24107233,
      0.6252645,   0.25759596, 1.4764999,   0.4396305,  0.51341045,
      0.03690652,  1.2340646,  0.031093933, 0.65462106, 0.9864291,
      0.045557402, 1.2032821,  0.7458623,   0.2978456,  0.9822353,
      1.3218253,   0.16335683, 0.6249672,   0.7417124,  0.13622278,
      1.0594494,   0.08097394, 0.5245482,   1.8382659,  0.83607155,
      1.3591579,   0.5534932,  0.15473656,  0.87786126, 0.5545231,
      1.2758892,   0.8472756,  0.33949015,  0.88678396, 0.39700082,
      0.96295965,  0.0797269,  0.6448428,   0.40467185, 0.021282993,
      2.4381325,   0.16571054, 0.9223551,   0.8054891,  1.8176587,
      0.82657945,  1.5185177,  1.7634532,   2.1006796,  0.9573124,
      0.24787527,  1.1825719,  0.9785193,   0.5731644,  0.98444605};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  float output_0[60];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[] = {
      0.23736306,  0.19418482,  0.20412616,  0.22373125, 0.14059469,
      0.17362203,  0.12020662,  0.40671638,  0.14420655, 0.15524843,
      0.10262663,  0.33976546,  0.10203184,  0.19034003, 0.26523602,
      0.099646166, 0.31714222,  0.20072395,  0.12824133, 0.2542463,
      0.3734811,   0.11726061,  0.18604887,  0.20908786, 0.114121646,
      0.20241624,  0.07608497,  0.11856067,  0.4410431,  0.16189504,
      0.35563278,  0.15889348,  0.106641985, 0.2197745,  0.1590572,
      0.31884134,  0.20769697,  0.124997616, 0.21606697, 0.13239704,
      0.32225597,  0.13323486,  0.23444696,  0.18439098, 0.12567127,
      0.48642832,  0.050132398, 0.10683784,  0.09505408, 0.26154742,
      0.097421065, 0.19460672,  0.24861766,  0.3483273,  0.11102721,
      0.10993784,  0.2799502,   0.22827685,  0.15220134, 0.2296338};
  const int32_t axis = 2;
  ONNC_RUNTIME_softmax_float(nullptr, input_0, input_0_ndim, input_0_dims,
                             output_0, output_0_ndim, output_0_dims, axis);
  ASSERT_TRUE(relative_error(output_0, answer_0, 60) < 1e-5f);
}
