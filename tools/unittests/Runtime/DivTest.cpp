#include <cmath>
#include <cstdlib>
#include <ctime>
#include <skypat/skypat.h>
#include <vector>

#define restrict
extern "C" {
#include <onnc/Runtime/onnc-runtime.h>
}
SKYPAT_F(Operator_Div, test_div_example) {
  const float input_0[2] = {3.0, 4.0};
  const int32_t input_0_ndim = 1;
  const int32_t input_0_dims[] = {2};
  const float input_1[2] = {1.0, 2.0};
  const int32_t input_1_ndim = 1;
  const int32_t input_1_dims[] = {2};
  float output_0[2];
  const int32_t output_0_ndim = 1;
  const int32_t output_0_dims[] = {2};
  const float answer_0[2] = {3.0, 2.0};
  ONNC_RUNTIME_div_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                         (float *)input_1, input_1_ndim, input_1_dims,
                         (float *)output_0, output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 2; ++i) {
    if (abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}

SKYPAT_F(Operator_Div, test_div) {
  const float input_0[3][4][5] = {
      {{-0.49112775921821594, 0.10805927962064743, 0.30594849586486816,
        1.0494149923324585, -1.2002196311950684},
       {-0.4546922743320465, 0.10958729684352875, 0.31166785955429077,
        0.4043251574039459, 0.5251323580741882},
       {0.816491425037384, -1.159980297088623, 0.27401140332221985,
        1.3969978094100952, -1.5704582929611206},
       {-0.11742878705263138, 1.2961289882659912, -0.8454426527023315,
        -0.9382809996604919, 0.5999640822410583}},
      {{-0.5666080713272095, 1.262129783630371, 0.03706454485654831,
        -0.35210153460502625, -0.5188410878181458},
       {0.3555638790130615, 0.17456017434597015, 1.6041620969772339,
        -1.2407643795013428, 0.5841633081436157},
       {-0.45602089166641235, 0.7338046431541443, 0.12233854085206985,
        -0.47224217653274536, 0.7244453430175781},
       {1.7599807977676392, -0.5973052978515625, 1.0008471012115479,
        1.4943302869796753, -0.8925207257270813}},
      {{-1.1969887018203735, 0.19608630239963531, 0.031236913055181503,
        0.4042823910713196, 0.81307053565979},
       {-0.525577962398529, 0.7008194327354431, -0.14819346368312836,
        -0.23491641879081726, -0.40151330828666687},
       {-0.7479208111763, 0.4491182565689087, -0.07344160974025726,
        0.17853625118732452, -1.8309526443481445},
       {-2.5131185054779053, 0.5683631896972656, 1.615246057510376,
        1.0606354475021362, 0.7775385975837708}}};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[3][4][5] = {
      {{1.0520163774490356, 1.111664056777954, 1.4713475704193115,
        1.820343255996704, 1.6044871807098389},
       {1.239959955215454, 1.7577991485595703, 1.3768912553787231,
        1.2718400955200195, 1.8025034666061401},
       {1.9496195316314697, 1.2021220922470093, 1.9851468801498413,
        1.4250565767288208, 1.643653154373169},
       {1.8502107858657837, 1.044456958770752, 1.0194945335388184,
        1.7660086154937744, 1.474088430404663}},
      {{1.8212392330169678, 1.095832109451294, 1.1603584289550781,
        1.2721409797668457, 1.9178743362426758},
       {1.2213375568389893, 1.6685593128204346, 1.8684136867523193,
        1.517594814300537, 1.4962502717971802},
       {1.133716106414795, 1.5191973447799683, 1.0727689266204834,
        1.6012258529663086, 1.9487134218215942},
       {1.5596305131912231, 1.6777925491333008, 1.1933590173721313,
        1.4741394519805908, 1.438368320465088}},
      {{1.8062787055969238, 1.3241857290267944, 1.2044034004211426,
        1.454263687133789, 1.3516225814819336},
       {1.9326965808868408, 1.490315556526184, 1.7237529754638672,
        1.1944191455841064, 1.3351949453353882},
       {1.3998305797576904, 1.9066920280456543, 1.5925496816635132,
        1.8579680919647217, 1.9875264167785645},
       {1.9211337566375732, 1.766180396080017, 1.2103897333145142,
        1.035403847694397, 1.9399385452270508}}};
  const int32_t input_1_ndim = 3;
  const int32_t input_1_dims[] = {3, 4, 5};
  float output_0[3][4][5];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[3][4][5] = {
      {{-0.46684420108795166, 0.09720497578382492, 0.20793761312961578,
        0.5764929056167603, -0.7480394244194031},
       {-0.3666991591453552, 0.06234347075223923, 0.22635619342327118,
        0.3179056644439697, 0.29133501648902893},
       {0.41879525780677795, -0.9649438261985779, 0.1380307972431183,
        0.9803104400634766, -0.9554681777954102},
       {-0.06346778571605682, 1.240959644317627, -0.8292763233184814,
        -0.5313003659248352, 0.4070068597793579}},
      {{-0.3111112713813782, 1.1517547369003296, 0.031942322850227356,
        -0.2767786979675293, -0.27052924036979675},
       {0.2911266088485718, 0.10461730509996414, 0.8585690259933472,
        -0.8175860643386841, 0.3904181718826294},
       {-0.4022355377674103, 0.4830212891101837, 0.11403997242450714,
        -0.29492539167404175, 0.3717557191848755},
       {1.1284600496292114, -0.3560066521167755, 0.838680624961853,
        1.0136966705322266, -0.620509147644043}},
      {{-0.6626821756362915, 0.14808066189289093, 0.025935590267181396,
        0.2779980003833771, 0.6015514731407166},
       {-0.2719402313232422, 0.4702490270137787, -0.0859714075922966,
        -0.19667837023735046, -0.3007151186466217},
       {-0.5342938303947449, 0.23554840683937073, -0.04611574113368988,
        0.09609220176935196, -0.9212217926979065},
       {-1.3081433773040771, 0.32180359959602356, 1.3344842195510864,
        1.0243688821792603, 0.400805801153183}}};
  ONNC_RUNTIME_div_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                         (float *)input_1, input_1_ndim, input_1_dims,
                         (float *)output_0, output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3 * 4 * 5; ++i) {
    if (abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}

SKYPAT_F(Operator_Div, test_div_bcast) {
  const float input_0[3][4][5] = {
      {{0.856987476348877, 0.707323431968689, 0.831462025642395,
        0.5310654044151306, -1.4116425514221191},
       {-0.1688350886106491, 1.504144549369812, 0.8455660343170166,
        1.1777862310409546, -0.9550509452819824},
       {-1.0971484184265137, -0.3347278833389282, -1.2682405710220337,
        0.8632072806358337, -0.8784047961235046},
       {0.6726071238517761, -1.1827806234359741, -1.0839718580245972,
        0.6681915521621704, 1.0875053405761719}},
      {{-1.3307414054870605, -0.4595419764518738, -0.030535221099853516,
        -1.5506737232208252, -1.315361499786377},
       {-0.2907065451145172, 0.5115879774093628, -0.9406492114067078,
        -1.3154114484786987, 0.307176411151886},
       {-1.1621479988098145, -0.569047749042511, -0.1496431678533554,
        0.00822480022907257, -0.556977391242981},
       {-0.43850061297416687, -0.5439739227294922, -1.2182577848434448,
        -1.5541032552719116, 0.0626012459397316}},
      {{-2.179701566696167, 0.5148040056228638, 0.33693477511405945,
        -1.5822515487670898, 2.0142159461975098},
       {0.943469226360321, 0.10524687170982361, 0.18284307420253754,
        -0.32687097787857056, 2.0127763748168945},
       {-0.5424470901489258, -0.2252958118915558, -0.024707624688744545,
        -0.31455326080322266, -0.47794774174690247},
       {-1.306008219718933, 1.6989824771881104, 0.5534124970436096,
        -2.0552010536193848, -0.44063133001327515}}};
  const int32_t input_0_ndim = 3;
  const int32_t input_0_dims[] = {3, 4, 5};
  const float input_1[5] = {1.4984703063964844, 1.739959716796875,
                            1.57837975025177, 1.3883318901062012,
                            1.5222442150115967};
  const int32_t input_1_ndim = 1;
  const int32_t input_1_dims[] = {5};
  float output_0[3][4][5];
  const int32_t output_0_ndim = 3;
  const int32_t output_0_dims[] = {3, 4, 5};
  const float answer_0[3][4][5] = {
      {{0.5719082355499268, 0.4065171182155609, 0.5267819762229919,
        0.38252049684524536, -0.9273430109024048},
       {-0.1126716285943985, 0.864470899105072, 0.5357177257537842,
        0.8483462929725647, -0.6273966431617737},
       {-0.7321789264678955, -0.19237680733203888, -0.8035078644752502,
        0.6217585802078247, -0.5770459175109863},
       {0.4488624930381775, -0.6797747015953064, -0.6867623925209045,
        0.48129093647003174, 0.7144092321395874}},
      {{-0.8880665898323059, -0.2641106843948364, -0.019345927983522415,
        -1.116932988166809, -0.8640936017036438},
       {-0.1940022110939026, 0.29402288794517517, -0.5959587693214417,
        -0.9474762082099915, 0.20179180800914764},
       {-0.7755562663078308, -0.3270465135574341, -0.09480808675289154,
        0.005924231838434935, -0.3658922612667084},
       {-0.29263216257095337, -0.3126359283924103, -0.7718407511711121,
        -1.1194032430648804, 0.041124310344457626}},
      {{-1.4546177387237549, 0.29587122797966003, 0.2134687602519989,
        -1.1396781206130981, 1.3231884241104126},
       {0.6296215653419495, 0.06048810854554176, 0.11584226042032242,
        -0.23544152081012726, 1.3222427368164062},
       {-0.36200055480003357, -0.12948334217071533, -0.015653789043426514,
        -0.22656920552253723, -0.3139757215976715},
       {-0.8715609312057495, 0.9764493107795715, 0.3506206274032593,
        -1.480338454246521, -0.2894616425037384}}};
  ONNC_RUNTIME_div_float(NULL, (float *)input_0, input_0_ndim, input_0_dims,
                         (float *)input_1, input_1_ndim, input_1_dims,
                         (float *)output_0, output_0_ndim, output_0_dims);
  bool is_correct;
  is_correct = true;
  for (int32_t i = 0; i < 3 * 4 * 5; ++i) {
    if (abs(((float *)output_0)[i] - ((float *)answer_0)[i]) > 1.0e-7) {
      is_correct = false;
      break;
    }
  }
  ASSERT_TRUE(is_correct);
}
